<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.12 on win32)" generated="20250520 11:43:36.827" rpa="false" schemaversion="4">
<suite id="s1" name="autoAssignedService(With reservations)" source="c:\Users\UsuarioCompuElite\Documents\GitHub\Respaldo\AllRide Test Cases\Test Cases\Regular Flow\autoAssignedService(With reservations).robot">
<test id="s1-t1" name="Set Date Variables" line="14">
<kw name="Get Current Date" library="DateTime">
<var>${fecha_hoy}</var>
<arg>result_format=%Y-%m-%d</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250520 11:43:37.257" level="INFO">${fecha_hoy} = 2025-05-20</msg>
<status status="PASS" starttime="20250520 11:43:37.257" endtime="20250520 11:43:37.258"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${fecha_hoy}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.259" level="INFO">${fecha_hoy} = 2025-05-20</msg>
<status status="PASS" starttime="20250520 11:43:37.259" endtime="20250520 11:43:37.259"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${fecha_manana}</var>
<arg>${fecha_hoy}</arg>
<arg>1 days</arg>
<arg>result_format=%Y-%m-%d</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250520 11:43:37.262" level="INFO">${fecha_manana} = 2025-05-21</msg>
<status status="PASS" starttime="20250520 11:43:37.259" endtime="20250520 11:43:37.262"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${fecha_manana}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.263" level="INFO">${fecha_manana} = 2025-05-21</msg>
<status status="PASS" starttime="20250520 11:43:37.263" endtime="20250520 11:43:37.263"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${fecha_pasado_manana}</var>
<arg>${fecha_hoy}</arg>
<arg>2 days</arg>
<arg>result_format=%Y-%m-%d</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250520 11:43:37.264" level="INFO">${fecha_pasado_manana} = 2025-05-22</msg>
<status status="PASS" starttime="20250520 11:43:37.263" endtime="20250520 11:43:37.264"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${fecha_pasado_manana}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.266" level="INFO">${fecha_pasado_manana} = 2025-05-22</msg>
<status status="PASS" starttime="20250520 11:43:37.264" endtime="20250520 11:43:37.266"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${fecha_pasado_pasado_manana}</var>
<arg>${fecha_hoy}</arg>
<arg>3 days</arg>
<arg>result_format=%Y-%m-%d</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250520 11:43:37.266" level="INFO">${fecha_pasado_pasado_manana} = 2025-05-23</msg>
<status status="PASS" starttime="20250520 11:43:37.266" endtime="20250520 11:43:37.266"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${fecha_pasado_pasado_manana}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.267" level="INFO">${fecha_pasado_pasado_manana} = 2025-05-23</msg>
<status status="PASS" starttime="20250520 11:43:37.266" endtime="20250520 11:43:37.267"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${dia_actual}</var>
<arg>${fecha_hoy}</arg>
<arg>result_format=%a</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250520 11:43:37.268" level="INFO">${dia_actual} = Tue</msg>
<status status="PASS" starttime="20250520 11:43:37.267" endtime="20250520 11:43:37.268"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dia_actual_lower}</var>
<arg>${dia_actual.lower()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.269" level="INFO">${dia_actual_lower} = tue</msg>
<status status="PASS" starttime="20250520 11:43:37.268" endtime="20250520 11:43:37.269"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${arrival_date}</var>
<arg>${fecha_manana}T01:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.269" level="INFO">${arrival_date} = 2025-05-21T01:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.269" endtime="20250520 11:43:37.269"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${arrival_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.271" level="INFO">${arrival_date} = 2025-05-21T01:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.271" endtime="20250520 11:43:37.271"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${r_estimated_arrival1}</var>
<arg>${fecha_manana}T14:45:57.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.272" level="INFO">${r_estimated_arrival1} = 2025-05-21T14:45:57.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.271" endtime="20250520 11:43:37.272"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${r_estimated_arrival1}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.272" level="INFO">${r_estimated_arrival1} = 2025-05-21T14:45:57.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.272" endtime="20250520 11:43:37.272"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_date}</var>
<arg>${fecha_manana}T00:25:29.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.273" level="INFO">${service_date} = 2025-05-21T00:25:29.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.272" endtime="20250520 11:43:37.273"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${service_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.273" level="INFO">${service_date} = 2025-05-21T00:25:29.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.273" endtime="20250520 11:43:37.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modified_arrival_date}</var>
<arg>${fecha_manana}T01:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.274" level="INFO">${modified_arrival_date} = 2025-05-21T01:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.274" endtime="20250520 11:43:37.274"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modified_arrival_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.275" level="INFO">${modified_arrival_date} = 2025-05-21T01:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.274" endtime="20250520 11:43:37.275"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${r_modified_estimated_arrival}</var>
<arg>${fecha_pasado_manana}T14:45:57.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.275" level="INFO">${r_modified_estimated_arrival} = 2025-05-22T14:45:57.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.275" endtime="20250520 11:43:37.276"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${r_modified_estimated_arrival}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.276" level="INFO">${r_modified_estimated_arrival} = 2025-05-22T14:45:57.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.276" endtime="20250520 11:43:37.276"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modified_service_date}</var>
<arg>${fecha_manana}T00:25:29.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.277" level="INFO">${modified_service_date} = 2025-05-21T00:25:29.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.276" endtime="20250520 11:43:37.277"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modified_service_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.277" level="INFO">${modified_service_date} = 2025-05-21T00:25:29.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.277" endtime="20250520 11:43:37.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_date_20min}</var>
<arg>${fecha_manana}T00:20:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.278" level="INFO">${service_date_20min} = 2025-05-21T00:20:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.277" endtime="20250520 11:43:37.278"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${service_date_20min}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.278" level="INFO">${service_date_20min} = 2025-05-21T00:20:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.278" endtime="20250520 11:43:37.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_date_22min}</var>
<arg>${fecha_manana}T00:47:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.279" level="INFO">${service_date_22min} = 2025-05-21T00:47:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.279" endtime="20250520 11:43:37.279"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${service_date_22min}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.280" level="INFO">${service_date_22min} = 2025-05-21T00:47:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.279" endtime="20250520 11:43:37.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${start_date}</var>
<arg>${fecha_manana}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.280" level="INFO">${start_date} = 2025-05-21T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.280" endtime="20250520 11:43:37.280"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${start_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.281" level="INFO">${start_date} = 2025-05-21T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.281" endtime="20250520 11:43:37.281"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date_4weeks}</var>
<arg>2023-12-30T02:59:59.999Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.282" level="INFO">${end_date_4weeks} = 2023-12-30T02:59:59.999Z</msg>
<status status="PASS" starttime="20250520 11:43:37.282" endtime="20250520 11:43:37.282"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date_4weeks}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.282" level="INFO">${end_date_4weeks} = 2023-12-30T02:59:59.999Z</msg>
<status status="PASS" starttime="20250520 11:43:37.282" endtime="20250520 11:43:37.283"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date}</var>
<arg>${fecha_pasado_pasado_manana}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.283" level="INFO">${end_date} = 2025-05-23T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.283" endtime="20250520 11:43:37.283"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.283" level="INFO">${end_date} = 2025-05-23T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.283" endtime="20250520 11:43:37.283"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date_tomorrow}</var>
<arg>${fecha_manana}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.284" level="INFO">${end_date_tomorrow} = 2025-05-21T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.284" endtime="20250520 11:43:37.284"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date_tomorrow}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.285" level="INFO">${end_date_tomorrow} = 2025-05-21T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.284" endtime="20250520 11:43:37.285"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${schedule_day}</var>
<arg>${dia_actual_lower}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.285" level="INFO">${schedule_day} = tue</msg>
<status status="PASS" starttime="20250520 11:43:37.285" endtime="20250520 11:43:37.285"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${schedule_day}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.286" level="INFO">${schedule_day} = tue</msg>
<status status="PASS" starttime="20250520 11:43:37.286" endtime="20250520 11:43:37.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${start_date_today}</var>
<arg>${fecha_hoy}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.286" level="INFO">${start_date_today} = 2025-05-20T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.286" endtime="20250520 11:43:37.287"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${start_date_today}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.287" level="INFO">${start_date_today} = 2025-05-20T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.287" endtime="20250520 11:43:37.287"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${today_date}</var>
<arg>${fecha_hoy}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.288" level="INFO">${today_date} = 2025-05-20</msg>
<status status="PASS" starttime="20250520 11:43:37.287" endtime="20250520 11:43:37.288"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${today_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.288" level="INFO">${today_date} = 2025-05-20</msg>
<status status="PASS" starttime="20250520 11:43:37.288" endtime="20250520 11:43:37.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date_tomorrow2}</var>
<arg>${fecha_manana}T02:59:59.999Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.289" level="INFO">${end_date_tomorrow2} = 2025-05-21T02:59:59.999Z</msg>
<status status="PASS" starttime="20250520 11:43:37.289" endtime="20250520 11:43:37.289"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date_tomorrow}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.289" level="INFO">${end_date_tomorrow} = 2025-05-21T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.289" endtime="20250520 11:43:37.289"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expiration_date_qr}</var>
<arg>${fecha_manana}T14:10:37.968Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.291" level="INFO">${expiration_date_qr} = 2025-05-21T14:10:37.968Z</msg>
<status status="PASS" starttime="20250520 11:43:37.291" endtime="20250520 11:43:37.291"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${expiration_date_qr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.292" level="INFO">${expiration_date_qr} = 2025-05-21T14:10:37.968Z</msg>
<status status="PASS" starttime="20250520 11:43:37.292" endtime="20250520 11:43:37.293"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date_pastTomorrow}</var>
<arg>${fecha_pasado_manana}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.294" level="INFO">${end_date_pastTomorrow} = 2025-05-22T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.293" endtime="20250520 11:43:37.294"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date_pastTomorrow}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.295" level="INFO">${end_date_pastTomorrow} = 2025-05-22T03:00:00.000Z</msg>
<status status="PASS" starttime="20250520 11:43:37.295" endtime="20250520 11:43:37.295"/>
</kw>
<status status="PASS" starttime="20250520 11:43:37.256" endtime="20250520 11:43:37.295"/>
</test>
<test id="s1-t2" name="2 hours local" line="67">
<kw name="Get Current Date" library="DateTime">
<var>${date}</var>
<arg>time_zone=local</arg>
<arg>exclude_millis=yes</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250520 11:43:37.298" level="INFO">${date} = 2025-05-20 11:43:37</msg>
<status status="PASS" starttime="20250520 11:43:37.297" endtime="20250520 11:43:37.298"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${formatted_date}</var>
<arg>${date}</arg>
<arg>result_format=%H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250520 11:43:37.299" level="INFO">${formatted_date} = 11:43:37</msg>
<status status="PASS" starttime="20250520 11:43:37.299" endtime="20250520 11:43:37.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Hora Actual: ${formatted_date}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:37.301" level="INFO">Hora Actual: 11:43:37</msg>
<status status="PASS" starttime="20250520 11:43:37.301" endtime="20250520 11:43:37.301"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${one_hour_later}</var>
<arg>${date}</arg>
<arg>1 hour</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250520 11:43:37.302" level="INFO">${one_hour_later} = 2025-05-20 12:43:37.000</msg>
<status status="PASS" starttime="20250520 11:43:37.301" endtime="20250520 11:43:37.302"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${formatted_one_hour_later}</var>
<arg>${one_hour_later}</arg>
<arg>result_format=%H:%M</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250520 11:43:37.303" level="INFO">${formatted_one_hour_later} = 12:43</msg>
<status status="PASS" starttime="20250520 11:43:37.303" endtime="20250520 11:43:37.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Hora Actual + 1 hora: ${formatted_one_hour_later}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:37.304" level="INFO">Hora Actual + 1 hora: 12:43</msg>
<status status="PASS" starttime="20250520 11:43:37.303" endtime="20250520 11:43:37.304"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${formatted_one_hour_later}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.305" level="INFO">${formatted_one_hour_later} = 12:43</msg>
<status status="PASS" starttime="20250520 11:43:37.304" endtime="20250520 11:43:37.305"/>
</kw>
<status status="PASS" starttime="20250520 11:43:37.296" endtime="20250520 11:43:37.305"/>
</test>
<test id="s1-t3" name="Create Schedule Alto - Apumanque 19:00 hrs" line="78">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:37.308" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:37.308" endtime="20250520 11:43:37.309"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json; charset=utf-8</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:37.310" level="INFO">${headers} = {'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json; charset=...</msg>
<status status="PASS" starttime="20250520 11:43:37.309" endtime="20250520 11:43:37.310"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>${endPoint3}</arg>
<arg>data={"name":"Autoasignar","description":"Autoasignar","communities":["67b879e99a2ba09f940ea7c5"],"superCommunities":["653fd68233d83952fafcd4be"],"ownerIds":[{"id":"67b879e99a2ba09f940ea7c5","role":"community"}],"externalInfo":{"uuid":""},"assistantIds":[],"shapeId":"67fd1ec97b753207e7fcfb0d","usesBusCode":false,"usesVehicleList":true,"usesDriverCode":false,"allowsOnlyExistingDrivers":false,"allowsMultipleDrivers":false,"dynamicSeatAssignment":true,"usesTickets":false,"startsOnStop":false,"notNearStop":false,"routeCost":0,"ticketCost":0,"excludePassengers":{"active":false,"excludeType":"dontHide"},"restrictPassengers":{"enabled":false,"allowed":[],"visibility":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"reservation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"validation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"}},"endDepartureNotice":{"enabled":false,"lastStop":null},"scheduling":{"enabled":true,"limitUnit":"minutes","limitAmount":30,"lateNotification":{"enabled":false,"amount":0,"unit":"minutes"},"stopNotification":{"enabled":false,"amount":0,"unit":"minutes"},"startLimit":{"upperLimit":{"amount":60,"unit":"minutes"},"lowerLimit":{"amount":30,"unit":"minutes"}},"defaultServiceCost":null,"schedule":[{"enabled":true,"day":"${schedule_day}","time":"${formatted_one_hour_later}","estimatedArrival":null,"stopSchedule":[],"capped":{"enabled":true,"capacity":0,"by":"vehicle"},"vehicleCategoryId":null,"defaultResources":[],"serviceCost":0,"observations":"","reservations":{"enabled":false,"list":[]},"_ogIndex":0}],"stopOnReservation":false,"restrictions":{"customParams":{"enabled":false,"params":[]}},"reservations":{"enabled":false,"list":[]},"serviceCreationLimit":{"enabled":false,"date":null}},"customParams":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"validationParams":{"enabled":false,"driverParams":[],"passengerParams":[]},"allowsServiceSnapshots":false,"allowsNonServiceSnapshots":false,"labels":[],"roundOrder":[],"anchorStops":[],"originStop":"67b883869a2ba09f940eaa14","destinationStop":"67b883979a2ba09f940eaa20","hasBeacons":false,"hasCapacity":false,"isStatic":false,"showParable":false,"extraInfo":"","color":"602e2e","usesManualSeat":false,"allowsManualValidation":false,"usesDriverPin":false,"hasBoardings":false,"hasUnboardings":false,"allowsDistance":false,"allowGenericVehicles":false,"hasExternalGPS":false,"departureHourFulfillment":{"enabled":false,"ranges":[]},"usesOfflineCount":false,"useServiceReservations":false,"autoStartConditions":{"enabled":false,"ignition":false,"acceptedStatus":false,"delay":{"enabled":false,"time":0,"unit":"minutes"},"nearRoute":{"enabled":false,"distance":0}},"visible":true,"active":true,"usesTextToSpeech":false,"hasBoardingCount":false,"hasRounds":false,"hasUnboardingCount":false,"timeOnRoute":9,"distance":5,"distanceInMeters":5105,"legOptions":[{"legType":"service","preTripChecklist":{"enabled":false,"params":[]},"customParamsAtStart":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"startConditions":{"location":{"enabled":false,"type":"near","stopIds":[]},"schedule":{"enabled":false,"amount":0,"unit":"minutes"}},"moveToNextLegAutomatically":{"enabled":false,"stopId":null,"distance":100}}],"validateDeparture":{"enabled":false},"rounds":{"enabled":false,"anchorStops":[]},"trail":{"enabled":false,"adjustByRounds":false},"notifyUnboardedPassengers":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]},"sendAt":"eachStop"},"notifyPassengersWithoutReservation":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]},"sendAt":"eachStop"},"notifySkippedStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]}},"notifyUsersByStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]}},"assistantAssignsSeat":true,"routeDeviation":{"maxDistance":100,"maxTime":5,"enabled":false},"codeValidationOptions":{"enabled":false,"type":"qr","failureMessage":"Solo puedes presentar el código de AllRide o de tu DNI de identidad."},"internal":false,"endServiceLegAutomatically":{"enabled":false,"stopId":null,"distance":100,"timer":{"amount":5,"unit":"minutes"}},"route_type":3}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:37.957" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/admin/pb/routes?community=67b879e99a2ba09f940ea7c5 
 path_url=/api/v1/admin/pb/routes?community=67b879e99a2ba09f940ea7c5 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '4382'} 
 body={"name":"Autoasignar","description":"Autoasignar","communities":["67b879e99a2ba09f940ea7c5"],"superCommunities":["653fd68233d83952fafcd4be"],"ownerIds":[{"id":"67b879e99a2ba09f940ea7c5","role":"community"}],"externalInfo":{"uuid":""},"assistantIds":[],"shapeId":"67fd1ec97b753207e7fcfb0d","usesBusCode":false,"usesVehicleList":true,"usesDriverCode":false,"allowsOnlyExistingDrivers":false,"allowsMultipleDrivers":false,"dynamicSeatAssignment":true,"usesTickets":false,"startsOnStop":false,"notNearStop":false,"routeCost":0,"ticketCost":0,"excludePassengers":{"active":false,"excludeType":"dontHide"},"restrictPassengers":{"enabled":false,"allowed":[],"visibility":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"reservation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"validation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"}},"endDepartureNotice":{"enabled":false,"lastStop":null},"scheduling":{"enabled":true,"limitUnit":"minutes","limitAmount":30,"lateNotification":{"enabled":false,"amount":0,"unit":"minutes"},"stopNotification":{"enabled":false,"amount":0,"unit":"minutes"},"startLimit":{"upperLimit":{"amount":60,"unit":"minutes"},"lowerLimit":{"amount":30,"unit":"minutes"}},"defaultServiceCost":null,"schedule":[{"enabled":true,"day":"tue","time":"12:43","estimatedArrival":null,"stopSchedule":[],"capped":{"enabled":true,"capacity":0,"by":"vehicle"},"vehicleCategoryId":null,"defaultResources":[],"serviceCost":0,"observations":"","reservations":{"enabled":false,"list":[]},"_ogIndex":0}],"stopOnReservation":false,"restrictions":{"customParams":{"enabled":false,"params":[]}},"reservations":{"enabled":false,"list":[]},"serviceCreationLimit":{"enabled":false,"date":null}},"customParams":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"validationParams":{"enabled":false,"driverParams":[],"passengerParams":[]},"allowsServiceSnapshots":false,"allowsNonServiceSnapshots":false,"labels":[],"roundOrder":[],"anchorStops":[],"originStop":"67b883869a2ba09f940eaa14","destinationStop":"67b883979a2ba09f940eaa20","hasBeacons":false,"hasCapacity":false,"isStatic":false,"showParable":false,"extraInfo":"","color":"602e2e","usesManualSeat":false,"allowsManualValidation":false,"usesDriverPin":false,"hasBoardings":false,"hasUnboardings":false,"allowsDistance":false,"allowGenericVehicles":false,"hasExternalGPS":false,"departureHourFulfillment":{"enabled":false,"ranges":[]},"usesOfflineCount":false,"useServiceReservations":false,"autoStartConditions":{"enabled":false,"ignition":false,"acceptedStatus":false,"delay":{"enabled":false,"time":0,"unit":"minutes"},"nearRoute":{"enabled":false,"distance":0}},"visible":true,"active":true,"usesTextToSpeech":false,"hasBoardingCount":false,"hasRounds":false,"hasUnboardingCount":false,"timeOnRoute":9,"distance":5,"distanceInMeters":5105,"legOptions":[{"legType":"service","preTripChecklist":{"enabled":false,"params":[]},"customParamsAtStart":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"startConditions":{"location":{"enabled":false,"type":"near","stopIds":[]},"schedule":{"enabled":false,"amount":0,"unit":"minutes"}},"moveToNextLegAutomatically":{"enabled":false,"stopId":null,"distance":100}}],"validateDeparture":{"enabled":false},"rounds":{"enabled":false,"anchorStops":[]},"trail":{"enabled":false,"adjustByRounds":false},"notifyUnboardedPassengers":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]},"sendAt":"eachStop"},"notifyPassengersWithoutReservation":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]},"sendAt":"eachStop"},"notifySkippedStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]}},"notifyUsersByStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]}},"assistantAssignsSeat":true,"routeDeviation":{"maxDistance":100,"maxTime":5,"enabled":false},"codeValidationOptions":{"enabled":false,"type":"qr","failureMessage":"Solo puedes presentar el código de AllRide o de tu DNI de identidad."},"internal":false,"endServiceLegAutomatically":{"enabled":false,"stopId":null,"distance":100,"timer":{"amount":5,"unit":"minutes"}},"route_type":3} 
 </msg>
<msg timestamp="20250520 11:43:37.958" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/admin/pb/routes?community=67b879e99a2ba09f940ea7c5 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:43:38 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755879', 'ETag': 'W/"166b-4MX/jC6xyjytjEyitcJewymRMxg"', 'Content-Encoding': 'gzip'} 
 body={"trail":{"enabled":false,"adjustByRounds":false},"rounds":{"enabled":false,"anchorStops":[]},"notifyUsersByStop":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[],"destinataries":"admins"},"enabled":false},"notifyUnboardedPassengers":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[],"destinataries":"admins"},"enabled":false,"sendAt":"eachStop"},"notifyPassengersWithoutReservation":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[],"destinataries":"admins"},"enabled":false,"sendAt":"eachStop"},"notifySkippedStop":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[],"destinataries":"admins"},"enabled":false},"excludePassengers":{"active":false,"excludeType":"dontHide"},"scheduling":{"enabled":true,"limitUnit":"minutes","limitAmount":30,"lateNotification":{"enabled":false,"amount":0,"unit":"minutes"},"stopNotification":{"enabled":false,"amount":0,"unit":"minutes"},"startLimit":{"upperLimit":{"amount":60,"unit":"minutes"},"lowerLimit":{"amount":30,"unit":"minutes"}},"defaultServiceCost":null,"schedule":[{"capped":{"enabled":true,"capacity":0,"by":"vehicle"},"restrictPassengers":{"validation":{"enabled":false,"conditional":"or","parameters":[],"parameter":[]},"reservation":{"enabled":false,"conditional":"or","parameters":[],"parameter":[]},"visibility":{"enabled":false,"conditional":"or","parameters":[],"parameter":[]},"enabled":false},"reservations":{"enabled":false,"list":[]},"enabled":true,"_id":"682ca32ab9a3329e44cb45f7","day":"tue","time":"12:43","estimatedArrival":null,"stopSchedule":[],"vehicleCategoryId":null,"defaultResources":[],"serviceCost":0,"observations":""}],"stopOnReservation":false,"restrictions":{"customParams":{"enabled":false,"params":[]},"byQuantity":{"unit":"days","userSkip":[]},"_id":"682ca32ab9a3329e44cb45f8"},"serviceCreationLimit":{"enabled":false,"date":null}},"rating":{"enabled":false,"withValidation":false},"endDepartureNotice":{"enabled":false,"lastStop":null},"restrictPassengers":{"enabled":false,"visibility":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"reservation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"validation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"}},"snapshots":{"enabled":false},"validationParams":{"driverParams":[],"passengerParams":[]},"canResume":{"timeLimit":{"enabled":false,"amount":5,"unit":"minutes"},"enabled":false},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"validateDeparture":{"enabled":false},"minimumConfirmationTime":{"enabled":false,"amount":1,"unit":"hours"},"minimumTimeToForceDeparture":{"enabled":false,"amount":5,"unit":"minutes"},"endServiceLegAutomatically":{"estimatedDuration":{"byTime":{"unit":"minutes"}},"timer":{"amount":5,"unit":"minutes"},"distance":100,"enabled":false,"stopId":null},"autoStartConditions":{"delay":{"enabled":false,"time":0,"unit":"minutes"},"nearRoute":{"enabled":false,"distance":0},"enabled":false,"ignition":false,"acceptedStatus":false},"codeValidationOptions":{"type":"qr","failureMessage":"Solo puedes presentar el código de AllRide o de tu DNI de identidad.","showRejected":true,"enabled":false},"DNIValidation":{"enabled":false,"options":["qr"]},"validation":{"external":[]},"restrictions":{"external":[]},"assistantIds":[],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["67b879e99a2ba09f940ea7c5"],"active":true,"visible":true,"internal":false,"anchorStops":[],"isStatic":false,"labels":[],"hasExternalGPS":false,"hasCapacity":false,"hasBeacons":false,"hasRounds":false,"hasBoardingCount":false,"hasUnboardingCount":false,"usesBusCode":false,"usesVehicleList":true,"dynamicSeatAssignment":true,"usesDriverCode":false,"usesDriverPin":false,"usesTickets":false,"usesPasses":false,"usesTextToSpeech":false,"allowsManualValidation":false,"allowsRating":false,"allowsOnlyExistingDrivers":false,"allowsMultipleDrivers":false,"allowsDebugging":false,"startsOnStop":false,"notNearStop":false,"allowsNonServiceSnapshots":false,"allowsServiceSnapshots":false,"allowsDistance":false,"usesOfflineCount":false,"hasBoardings":false,"hasUnboardings":false,"usesManualSeat":false,"noPassengerInfo":false,"showParable":false,"showStops":true,"allowGenericVehicles":false,"usesVehicleQRLink":false,"skipDeclaration":false,"skipQRValidation":false,"assistantAssignsSeat":true,"hasBarrier":false,"_id":"682ca32ab9a3329e44cb45f0","name":"Autoasignar","shapeId":"67fd1ec97b753207e7fcfb0d","description":"Autoasignar","extraInfo":"","externalInfo":{"uuid":""},"color":"602e2e","legOptions":[{"startConditions":{"location":{"stopIds":[],"enabled":false,"type":"near"},"schedule":{"enabled":false,"amount":0,"unit":"minutes"}},"moveToNextLegAutomatically":{"distance":100,"enabled":false,"stopId":null},"ETA":{"notify":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[]}},"visibility":[]},"providers":[],"_id":"682ca32ab9a3329e44cb45f1","legType":"service","preTripChecklist":{"enabled":false,"params":[]},"customParamsAtStart":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]}}],"useServiceReservations":false,"routeDeviation":{"maxDistance":100,"maxTime":5,"enabled":false},"ownerIds":[{"_id":"682ca32ab9a3329e44cb45f6","id":"67b879e99a2ba09f940ea7c5","role":"community"}],"segments":[],"roundOrder":[],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"67b879e99a2ba09f940ea7c5","timeOnRoute":9,"distance":5,"distanceInMeters":5105,"originStop":"67b883869a2ba09f940eaa14","destinationStop":"67b883979a2ba09f940eaa20","customParams":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"createdAt":"2025-05-20T15:43:38.641Z","updatedAt":"2025-05-20T15:43:38.641Z","__v":0} 
 </msg>
<msg timestamp="20250520 11:43:37.958" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:37.310" endtime="20250520 11:43:37.958"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:43:37.959" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:43:37.959" endtime="20250520 11:43:37.959"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" starttime="20250520 11:43:37.961" endtime="20250520 11:43:37.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:37.961" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:43:37.961" endtime="20250520 11:43:37.962"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${scheduleId}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:37.963" level="INFO">${scheduleId} = 682ca32ab9a3329e44cb45f0</msg>
<status status="PASS" starttime="20250520 11:43:37.962" endtime="20250520 11:43:37.963"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${scheduleId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:37.963" level="INFO">${scheduleId} = 682ca32ab9a3329e44cb45f0</msg>
<status status="PASS" starttime="20250520 11:43:37.963" endtime="20250520 11:43:37.963"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250520 11:43:39.970" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250520 11:43:37.964" endtime="20250520 11:43:39.971"/>
</kw>
<status status="PASS" starttime="20250520 11:43:37.306" endtime="20250520 11:43:39.972"/>
</test>
<test id="s1-t4" name="Create services" line="100">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:39.974" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:39.974" endtime="20250520 11:43:39.975"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json; charset=utf-8</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:39.975" level="INFO">${headers} = {'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json; charset=...</msg>
<status status="PASS" starttime="20250520 11:43:39.975" endtime="20250520 11:43:39.975"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=https://stage.allrideapp.com/api/v1/admin/pb/createServices/67b879e99a2ba09f940ea7c5?community=67b879e99a2ba09f940ea7c5</arg>
<arg>data={}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:42.223" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/admin/pb/createServices/67b879e99a2ba09f940ea7c5?community=67b879e99a2ba09f940ea7c5 
 path_url=/api/v1/admin/pb/createServices/67b879e99a2ba09f940ea7c5?community=67b879e99a2ba09f940ea7c5 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2'} 
 body={} 
 </msg>
<msg timestamp="20250520 11:43:42.223" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/admin/pb/createServices/67b879e99a2ba09f940ea7c5?community=67b879e99a2ba09f940ea7c5 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:43:42 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '0', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755882'} 
 body=None 
 </msg>
<msg timestamp="20250520 11:43:42.224" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:39.977" endtime="20250520 11:43:42.224"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:43:42.225" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:43:42.224" endtime="20250520 11:43:42.225"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" starttime="20250520 11:43:42.227" endtime="20250520 11:43:42.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:42.228" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:43:42.228" endtime="20250520 11:43:42.228"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250520 11:43:44.244" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250520 11:43:42.228" endtime="20250520 11:43:44.244"/>
</kw>
<status status="PASS" starttime="20250520 11:43:39.973" endtime="20250520 11:43:44.248"/>
</test>
<test id="s1-t5" name="Get Service Id" line="119">
<kw name="Set Variable" library="BuiltIn">
<var>${url}</var>
<arg>${STAGE_URL}/api/v1/admin/pb/allServices?community=67b879e99a2ba09f940ea7c5&amp;startDate=${start_date_today}&amp;endDate=${end_date_pastTomorrow}&amp;onlyODDs=false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:44.251" level="INFO">${url} = https://stage.allrideapp.com/api/v1/admin/pb/allServices?community=67b879e99a2ba09f940ea7c5&amp;startDate=2025-05-20T03:00:00.000Z&amp;endDate=2025-05-22T03:00:00.000Z&amp;onlyODDs=false</msg>
<status status="PASS" starttime="20250520 11:43:44.251" endtime="20250520 11:43:44.252"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:44.253" level="INFO">${headers} = {'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214'}</msg>
<status status="PASS" starttime="20250520 11:43:44.252" endtime="20250520 11:43:44.253"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20250520 11:43:44.901" level="INFO">GET Request : url=https://stage.allrideapp.com/api/v1/admin/pb/allServices?community=67b879e99a2ba09f940ea7c5&amp;startDate=2025-05-20T03:00:00.000Z&amp;endDate=2025-05-22T03:00:00.000Z&amp;onlyODDs=false 
 path_url=/api/v1/admin/pb/allServices?community=67b879e99a2ba09f940ea7c5&amp;startDate=2025-05-20T03:00:00.000Z&amp;endDate=2025-05-22T03:00:00.000Z&amp;onlyODDs=false 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214'} 
 body=None 
 </msg>
<msg timestamp="20250520 11:43:44.902" level="INFO">GET Response : url=https://stage.allrideapp.com/api/v1/admin/pb/allServices?community=67b879e99a2ba09f940ea7c5&amp;startDate=2025-05-20T03:00:00.000Z&amp;endDate=2025-05-22T03:00:00.000Z&amp;onlyODDs=false 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:43:45 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755886', 'ETag': 'W/"26867-qEvUqwTxFWXBahMHng56rCyq3fI"', 'Content-Encoding': 'gzip'} 
 body={"regularDepartures":[{"_id":"682bee79b9a3329e44c6a280","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"67b879e99a2ba09f940ea7c5","name":"Pruebas Automatización 2.0","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_67b879e99a2ba09f940ea7c5_1740143082994.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"serviceId":"682bee75b9a3329e44c6a266","serviceDate":"2025-05-20T03:52:00.000Z","driverId":{"_id":"67b884c5b5ebd5b87145e5c3","code":"20","name":"Nico 2.0"},"routeId":{"_id":"682bee71618f7b6b69a36e30","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"Autoasignar","shapeId":{"_id":"67fd1ec97b753207e7fcfb0d","distanceInMeters":5105},"description":"Autoasignar","useServiceReservations":false,"originStop":{"_id":"67b883869a2ba09f940eaa14","name":"mall apumanque"},"destinationStop":{"_id":"67b883979a2ba09f940eaa20","name":"alto las condes"}},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"vehicleId":{"_id":"67b885fcb5ebd5b87145e65f","plate":"DOSASIENTOS","code":"123"},"realStartLocation":{"_id":"682bee79b9a3329e44c6a295","lat":-34.394131,"lon":-70.7814302,"loc":[-70.7814302,-34.394131]},"startedAt":"2025-05-20T02:52:41.644Z","endedAt":"2025-05-20T02:52:51.302Z","realEndLocation":{"_id":"682bee83618f7b6b69a36f00","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"validations":[{"_id":"682bee7a618f7b6b69a36e6f","createdAt":"2025-05-20T02:52:43.301Z","departureId":"682bee79b9a3329e44c6a280"},{"_id":"682bee7eb9a3329e44c6a2b9","createdAt":"2025-05-20T02:52:46.476Z","departureId":"682bee79b9a3329e44c6a280","userId":"67b886639a2ba09f940eab0a"}]},{"_id":"682beeffb9a3329e44c6a7a3","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"67b879e99a2ba09f940ea7c5","name":"Pruebas Automatización 2.0","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_67b879e99a2ba09f940ea7c5_1740143082994.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"driverId":{"_id":"67b884c5b5ebd5b87145e5c3","code":"20","name":"Nico 2.0"},"drivers":[],"vehicleId":{"_id":"67ed2e71a45b6aa00234a2ff","plate":"AUTO 5 ASIENTOS"},"routeId":{"_id":"682beef8b9a3329e44c6a75a","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"Limite validaciones RF(1)","shapeId":{"_id":"67fd1ec97b753207e7fcfb0d","distanceInMeters":5105},"description":"Limite validaciones RF","useServiceReservations":false,"originStop":{"_id":"67b883869a2ba09f940eaa14","name":"mall apumanque"},"destinationStop":{"_id":"67b883979a2ba09f940eaa20","name":"alto las condes"}},"serviceId":"682beefb618f7b6b69a3719f","serviceDate":"2025-05-20T03:54:00.000Z","reservations":[],"state":"pending","stateHistory":[{"_id":"682beeffb9a3329e44c6a7a9","state":"pending","date":"2025-05-20T02:54:55.254Z"}],"apportionByCategories":[],"realStartLocation":{"_id":"682bef00618f7b6b69a371d8","lat":-33.3908833,"lon":-70.54620129999999,"loc":[-70.54620129999999,-33.3908833]},"startedAt":"2025-05-20T02:54:56.904Z","endedAt":"2025-05-20T02:55:07.640Z","realEndLocation":{"_id":"682bef0bb9a3329e44c6a8a5","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"validations":[{"_id":"682bef01b9a3329e44c6a7bd","createdAt":"2025-05-20T02:54:57.976Z","departureId":"682beeffb9a3329e44c6a7a3"},{"_id":"682bef05b9a3329e44c6a833","createdAt":"2025-05-20T02:55:01.927Z","departureId":"682beeffb9a3329e44c6a7a3","userId":"67b886639a2ba09f940eab0a"}]},{"_id":"682bf33ab9a3329e44c6c8e1","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"67b879e99a2ba09f940ea7c5","name":"Pruebas Automatización 2.0","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_67b879e99a2ba09f940ea7c5_1740143082994.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"serviceId":"682bf336b9a3329e44c6c8c1","serviceDate":"2025-05-20T04:12:00.000Z","driverId":{"_id":"67b884c5b5ebd5b87145e5c3","code":"20","name":"Nico 2.0"},"routeId":{"_id":"682bf332618f7b6b69a38af0","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"Autoasignar","shapeId":{"_id":"67fd1ec97b753207e7fcfb0d","distanceInMeters":5105},"description":"Autoasignar","useServiceReservations":false,"originStop":{"_id":"67b883869a2ba09f940eaa14","name":"mall apumanque"},"destinationStop":{"_id":"67b883979a2ba09f940eaa20","name":"alto las condes"}},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"vehicleId":{"_id":"67b885fcb5ebd5b87145e65f","plate":"DOSASIENTOS","code":"123"},"realStartLocation":{"_id":"682bf33ab9a3329e44c6c8f6","lat":-34.394131,"lon":-70.7814302,"loc":[-70.7814302,-34.394131]},"startedAt":"2025-05-20T03:12:58.430Z","endedAt":"2025-05-20T03:13:08.977Z","realEndLocation":{"_id":"682bf344b9a3329e44c6c972","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"validations":[{"_id":"682bf33b618f7b6b69a38b50","createdAt":"2025-05-20T03:13:00.067Z","departureId":"682bf33ab9a3329e44c6c8e1"},{"_id":"682bf33f618f7b6b69a38ba7","createdAt":"2025-05-20T03:13:04.058Z","departureId":"682bf33ab9a3329e44c6c8e1","userId":"67b886639a2ba09f940eab0a"}]},{"_id":"682bf40e618f7b6b69a39033","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"67b879e99a2ba09f940ea7c5","name":"Pruebas Automatización 2.0","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_67b879e99a2ba09f940ea7c5_1740143082994.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"serviceId":"682bf40a618f7b6b69a39019","serviceDate":"2025-05-20T04:16:00.000Z","driverId":{"_id":"67b884c5b5ebd5b87145e5c3","code":"20","name":"Nico 2.0"},"routeId":{"_id":"682bf407b9a3329e44c6cfec","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"Autoasignar","shapeId":{"_id":"67fd1ec97b753207e7fcfb0d","distanceInMeters":5105},"description":"Autoasignar","useServiceReservations":false,"originStop":{"_id":"67b883869a2ba09f940eaa14","name":"mall apumanque"},"destinationStop":{"_id":"67b883979a2ba09f940eaa20","name":"alto las condes"}},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"vehicleId":{"_id":"67b885fcb5ebd5b87145e65f","plate":"DOSASIENTOS","code":"123"},"realStartLocation":{"_id":"682bf40e618f7b6b69a39048","lat":-34.394131,"lon":-70.7814302,"loc":[-70.7814302,-34.394131]},"startedAt":"2025-05-20T03:16:30.997Z","endedAt":"2025-05-20T03:16:42.826Z","realEndLocation":{"_id":"682bf41ab9a3329e44c6d0ea","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"validations":[{"_id":"682bf40fb9a3329e44c6d037","createdAt":"2025-05-20T03:16:32.071Z","departureId":"682bf40e618f7b6b69a39033"},{"_id":"682bf414b9a3329e44c6d08b","createdAt":"2025-05-20T03:16:36.422Z","departureId":"682bf40e618f7b6b69a39033","userId":"67b886639a2ba09f940eab0a"}]},{"_id":"682bf4e6618f7b6b69a395ca","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"67b879e99a2ba09f940ea7c5","name":"Pruebas Automatización 2.0","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_67b879e99a2ba09f940ea7c5_1740143082994.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"serviceId":"682bf4e2618f7b6b69a395b6","serviceDate":"2025-05-20T04:19:00.000Z","driverId":{"_id":"67b884c5b5ebd5b87145e5c3","code":"20","name":"Nico 2.0"},"routeId":{"_id":"682bf4df618f7b6b69a39539","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"Autoasignar","shapeId":{"_id":"67fd1ec97b753207e7fcfb0d","distanceInMeters":5105},"description":"Autoasignar","useServiceReservations":false,"originStop":{"_id":"67b883869a2ba09f940eaa14","name":"mall apumanque"},"destinationStop":{"_id":"67b883979a2ba09f940eaa20","name":"alto las condes"}},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"vehicleId":{"_id":"67b885fcb5ebd5b87145e65f","plate":"DOSASIENTOS","code":"123"},"realStartLocation":{"_id":"682bf4e6618f7b6b69a395df","lat":-34.394131,"lon":-70.7814302,"loc":[-70.7814302,-34.394131]},"startedAt":"2025-05-20T03:20:06.475Z","endedAt":"2025-05-20T03:20:15.639Z","realEndLocation":{"_id":"682bf4ef618f7b6b69a3966e","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"validations":[{"_id":"682bf4e7b9a3329e44c6d756","createdAt":"2025-05-20T03:20:07.664Z","departureId":"682bf4e6618f7b6b69a395ca"},{"_id":"682bf4ea618f7b6b69a39618","createdAt":"2025-05-20T03:20:10.859Z","departureId":"682bf4e6618f7b6b69a395ca","userId":"67b886639a2ba09f940eab0a"}]},{"_id":"682bf67e618f7b6b69a39dda","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avat... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250520 11:43:44.902" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:44.253" endtime="20250520 11:43:44.903"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${responseJson}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:44.912" level="INFO">${responseJson} = {'regularDepartures': [{'_id': '682bee79b9a3329e44c6a280', 'superCommunities': [{'_id': '653fd68233d83952fafcd4be', 'name': 'SC - Automatización', 'avatar': 'https://s3.amazonaws.com/allride.uploads/s...</msg>
<status status="PASS" starttime="20250520 11:43:44.904" endtime="20250520 11:43:44.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_id}</var>
<arg>None</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:44.914" level="INFO">${service_id} = None</msg>
<status status="PASS" starttime="20250520 11:43:44.913" endtime="20250520 11:43:44.914"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${num_scheduled_services}</var>
<arg>${responseJson['scheduledServices']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250520 11:43:44.917" level="INFO">Length is 86</msg>
<msg timestamp="20250520 11:43:44.918" level="INFO">${num_scheduled_services} = 86</msg>
<status status="PASS" starttime="20250520 11:43:44.916" endtime="20250520 11:43:44.918"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${sorted_services}</var>
<arg>sorted(${responseJson}[scheduledServices], key=lambda x: x['createdAt'])</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250520 11:43:44.964" level="INFO">${sorted_services} = [{'_id': '680ef4f590891fe307193a22', 'superCommunities': [{'_id': '653fd68233d83952fafcd4be', 'name': 'SC - Automatización', 'avatar': 'https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_65...</msg>
<status status="PASS" starttime="20250520 11:43:44.919" endtime="20250520 11:43:44.966"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${sorted_services}</var>
<arg>[service for service in ${responseJson}[scheduledServices] if service['routeId']['_id'] == '${scheduleId}']</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250520 11:43:45.001" level="INFO">${sorted_services} = [{'_id': '682ca32eb9a3329e44cb4732', 'superCommunities': [{'_id': '653fd68233d83952fafcd4be', 'name': 'SC - Automatización', 'avatar': 'https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_65...</msg>
<status status="PASS" starttime="20250520 11:43:44.967" endtime="20250520 11:43:45.001"/>
</kw>
<if>
<branch type="IF" condition="${sorted_services} == []">
<kw name="Fatal Error" library="BuiltIn">
<arg>msg= No services were created with routeId._id = "${scheduleId}" All createSheduled Tests Failing(Fatal error)</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.005" endtime="20250520 11:43:45.006"/>
</kw>
<status status="NOT RUN" starttime="20250520 11:43:45.004" endtime="20250520 11:43:45.007"/>
</branch>
<status status="PASS" starttime="20250520 11:43:45.004" endtime="20250520 11:43:45.009"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${last_service}</var>
<arg>${sorted_services[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:45.015" level="INFO">${last_service} = {'_id': '682ca32eb9a3329e44cb4732', 'superCommunities': [{'_id': '653fd68233d83952fafcd4be', 'name': 'SC - Automatización', 'avatar': 'https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653...</msg>
<status status="PASS" starttime="20250520 11:43:45.011" endtime="20250520 11:43:45.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_id}</var>
<arg>${last_service['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:45.019" level="INFO">${service_id} = 682ca32eb9a3329e44cb4732</msg>
<status status="PASS" starttime="20250520 11:43:45.017" endtime="20250520 11:43:45.019"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${last_service_route}</var>
<arg>${last_service['routeId']['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:45.024" level="INFO">${last_service_route} = 682ca32ab9a3329e44cb45f0</msg>
<status status="PASS" starttime="20250520 11:43:45.023" endtime="20250520 11:43:45.024"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${scheduleId}</arg>
<arg>${last_service_route}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250520 11:43:45.025" endtime="20250520 11:43:45.026"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${service_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:45.029" level="INFO">${service_id} = 682ca32eb9a3329e44cb4732</msg>
<status status="PASS" starttime="20250520 11:43:45.029" endtime="20250520 11:43:45.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Last created service ID: ${service_id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:45.032" level="INFO">Last created service ID: 682ca32eb9a3329e44cb4732</msg>
<status status="PASS" starttime="20250520 11:43:45.031" endtime="20250520 11:43:45.033"/>
</kw>
<status status="PASS" starttime="20250520 11:43:44.251" endtime="20250520 11:43:45.039"/>
</test>
<test id="s1-t6" name="Get Driver Token" line="151">
<kw name="Set Variable" library="BuiltIn">
<var>${url}</var>
<arg>${STAGE_URL}/api/v1/admin/pb/drivers/?community=67b879e99a2ba09f940ea7c5&amp;driverId=67b884c5b5ebd5b87145e5c3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:45.045" level="INFO">${url} = https://stage.allrideapp.com/api/v1/admin/pb/drivers/?community=67b879e99a2ba09f940ea7c5&amp;driverId=67b884c5b5ebd5b87145e5c3</msg>
<status status="PASS" starttime="20250520 11:43:45.044" endtime="20250520 11:43:45.046"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:45.052" level="INFO">&amp;{headers} = { Authorization=Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214 }</msg>
<status status="PASS" starttime="20250520 11:43:45.049" endtime="20250520 11:43:45.052"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20250520 11:43:45.552" level="INFO">GET Request : url=https://stage.allrideapp.com/api/v1/admin/pb/drivers/?community=67b879e99a2ba09f940ea7c5&amp;driverId=67b884c5b5ebd5b87145e5c3 
 path_url=/api/v1/admin/pb/drivers/?community=67b879e99a2ba09f940ea7c5&amp;driverId=67b884c5b5ebd5b87145e5c3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214'} 
 body=None 
 </msg>
<msg timestamp="20250520 11:43:45.552" level="INFO">GET Response : url=https://stage.allrideapp.com/api/v1/admin/pb/drivers/?community=67b879e99a2ba09f940ea7c5&amp;driverId=67b884c5b5ebd5b87145e5c3 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:43:46 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755887', 'ETag': 'W/"734-KbKvzABNVFRwp2dp1nb7cBPmaWc"', 'Content-Encoding': 'gzip'} 
 body={"device":{"lang":"es","token":"d1xWppM9TYCCmeS4ghLJ32:APA91bEzObfhGD-5P5aVlQzQiR91N3TWpM01RUuLV8m2yN4pYRTsMmpOCJQF_Ti-K6B6w-Glt9xaS2OYWdAD_WG310B2uivcJ_DMwjamuKSfqZjw1rlFbMU","manufacturer":"motorola","model":"moto g71 5G","lastUpdate":null,"appVersion":"3.0.34-STG","lastSeenOnline":"2025-05-20T14:05:09.206Z"},"config":{"autoLogout":{"timer":{"amount":0,"unit":"minutes"},"enum":"afterDepartureEnd","enabled":false}},"labels":[],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["67b879e99a2ba09f940ea7c5"],"active":true,"canReleaseReservations":true,"enabled":true,"enabledRoutes":[],"_id":"67b884c5b5ebd5b87145e5c3","code":"20","ownerIds":[{"_id":"67b884c5b5ebd5b87145e5c4","id":"67b879e99a2ba09f940ea7c5","role":"community"}],"notifications":[],"customParams":[{"communities":["67b879e99a2ba09f940ea7c5"],"_id":"67c06a062cd2c2ae3c353b48","superCommunityId":null,"params":[]}],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"67b879e99a2ba09f940ea7c5","name":"Nico 2.0","email":"nicolas+conductor20@allrideapp.com","contractType":"indefinite","hasToChangePassword":false,"createdAt":"2025-02-21T13:51:01.284Z","updatedAt":"2025-05-20T14:05:09.209Z","__v":2,"accessToken":"af7829e460af7cdde46a8d178446b976426b684c7c475d31b9222eb183775faf249acdd39bafec1fe9dfc83f936cab235bbb454868853cbb2b8a71791cd665bb","chatToken":"1a1d20a912f92362c4477133fb0cd91eeae99fb3c4874bef6b1389e45640252952d00a07f2dda9803367da85ada5ea522f458bfe59c4082cd3e4e1124b11d56d","externalDeviceToken":"c74c44b9d82d44b341d61170c376de856e7f9d977b7edcd16d22d4f4ff6e219a8a9e84cdbe83b28dadc24a81fe16c45fd8599227bae5718affc3a9a2efc341ce","rtlToken":"51517bfabcbf7279af0b9871bba14add5bd523ebe0d3e06c40c2af25849b8fd7150225559b90a236385226029a4a896814857b80ce09c8cf52d4e20f39bf37cc","canCreateRoutes":false,"driverParams":[],"id":"67b884c5b5ebd5b87145e5c3"} 
 </msg>
<msg timestamp="20250520 11:43:45.552" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:45.055" endtime="20250520 11:43:45.553"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250520 11:43:45.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250520 11:43:45.554" endtime="20250520 11:43:45.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${access_token}</var>
<arg>${response.json()['accessToken']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:45.563" level="INFO">${access_token} = af7829e460af7cdde46a8d178446b976426b684c7c475d31b9222eb183775faf249acdd39bafec1fe9dfc83f936cab235bbb454868853cbb2b8a71791cd665bb</msg>
<status status="PASS" starttime="20250520 11:43:45.556" endtime="20250520 11:43:45.563"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${tokenDriver}</var>
<arg>"Bearer " + "${access_token}"</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250520 11:43:45.566" level="INFO">${tokenDriver} = Bearer af7829e460af7cdde46a8d178446b976426b684c7c475d31b9222eb183775faf249acdd39bafec1fe9dfc83f936cab235bbb454868853cbb2b8a71791cd665bb</msg>
<status status="PASS" starttime="20250520 11:43:45.565" endtime="20250520 11:43:45.566"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${tokenDriver}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:45.569" level="INFO">${tokenDriver} = Bearer af7829e460af7cdde46a8d178446b976426b684c7c475d31b9222eb183775faf249acdd39bafec1fe9dfc83f936cab235bbb454868853cbb2b8a71791cd665bb</msg>
<status status="PASS" starttime="20250520 11:43:45.568" endtime="20250520 11:43:45.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${tokenDriver}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:45.573" level="INFO">Bearer af7829e460af7cdde46a8d178446b976426b684c7c475d31b9222eb183775faf249acdd39bafec1fe9dfc83f936cab235bbb454868853cbb2b8a71791cd665bb</msg>
<status status="PASS" starttime="20250520 11:43:45.572" endtime="20250520 11:43:45.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:45.581" level="INFO">{"device":{"lang":"es","token":"d1xWppM9TYCCmeS4ghLJ32:APA91bEzObfhGD-5P5aVlQzQiR91N3TWpM01RUuLV8m2yN4pYRTsMmpOCJQF_Ti-K6B6w-Glt9xaS2OYWdAD_WG310B2uivcJ_DMwjamuKSfqZjw1rlFbMU","manufacturer":"motorola","model":"moto g71 5G","lastUpdate":null,"appVersion":"3.0.34-STG","lastSeenOnline":"2025-05-20T14:05:09.206Z"},"config":{"autoLogout":{"timer":{"amount":0,"unit":"minutes"},"enum":"afterDepartureEnd","enabled":false}},"labels":[],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["67b879e99a2ba09f940ea7c5"],"active":true,"canReleaseReservations":true,"enabled":true,"enabledRoutes":[],"_id":"67b884c5b5ebd5b87145e5c3","code":"20","ownerIds":[{"_id":"67b884c5b5ebd5b87145e5c4","id":"67b879e99a2ba09f940ea7c5","role":"community"}],"notifications":[],"customParams":[{"communities":["67b879e99a2ba09f940ea7c5"],"_id":"67c06a062cd2c2ae3c353b48","superCommunityId":null,"params":[]}],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"67b879e99a2ba09f940ea7c5","name":"Nico 2.0","email":"nicolas+conductor20@allrideapp.com","contractType":"indefinite","hasToChangePassword":false,"createdAt":"2025-02-21T13:51:01.284Z","updatedAt":"2025-05-20T14:05:09.209Z","__v":2,"accessToken":"af7829e460af7cdde46a8d178446b976426b684c7c475d31b9222eb183775faf249acdd39bafec1fe9dfc83f936cab235bbb454868853cbb2b8a71791cd665bb","chatToken":"1a1d20a912f92362c4477133fb0cd91eeae99fb3c4874bef6b1389e45640252952d00a07f2dda9803367da85ada5ea522f458bfe59c4082cd3e4e1124b11d56d","externalDeviceToken":"c74c44b9d82d44b341d61170c376de856e7f9d977b7edcd16d22d4f4ff6e219a8a9e84cdbe83b28dadc24a81fe16c45fd8599227bae5718affc3a9a2efc341ce","rtlToken":"51517bfabcbf7279af0b9871bba14add5bd523ebe0d3e06c40c2af25849b8fd7150225559b90a236385226029a4a896814857b80ce09c8cf52d4e20f39bf37cc","canCreateRoutes":false,"driverParams":[],"id":"67b884c5b5ebd5b87145e5c3"}</msg>
<status status="PASS" starttime="20250520 11:43:45.579" endtime="20250520 11:43:45.581"/>
</kw>
<status status="PASS" starttime="20250520 11:43:45.042" endtime="20250520 11:43:45.585"/>
</test>
<test id="s1-t7" name="Resource Assignment(Driver and Vehicle)" line="172">
<kw name="Skip" library="BuiltIn">
<doc>Skips the rest of the current test.</doc>
<msg timestamp="20250520 11:43:45.595" level="SKIP">Skipped with Skip keyword.</msg>
<status status="SKIP" starttime="20250520 11:43:45.594" endtime="20250520 11:43:45.595"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.597" endtime="20250520 11:43:45.597"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.598" endtime="20250520 11:43:45.599"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url= /api/v1/admin/pb/assignServiceResources/${service_id}?community=67b879e99a2ba09f940ea7c5</arg>
<arg>data=[{"multipleDrivers":false,"driver":{"driverId":"67b884c5b5ebd5b87145e5c3"},"drivers":[],"vehicle":{"vehicleId":"67ed2e71a45b6aa00234a2ff","capacity":"5"},"passengers":[],"departure":null}]</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.600" endtime="20250520 11:43:45.600"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.604" endtime="20250520 11:43:45.605"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.609" endtime="20250520 11:43:45.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.611" endtime="20250520 11:43:45.611"/>
</kw>
<status status="SKIP" starttime="20250520 11:43:45.593" endtime="20250520 11:43:45.612">Skipped with Skip keyword.</status>
</test>
<test id="s1-t8" name="Get departureId" line="190">
<kw name="Skip" library="BuiltIn">
<doc>Skips the rest of the current test.</doc>
<msg timestamp="20250520 11:43:45.616" level="SKIP">Skipped with Skip keyword.</msg>
<status status="SKIP" starttime="20250520 11:43:45.615" endtime="20250520 11:43:45.616"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${url}</var>
<arg>${STAGE_URL}/api/v1/admin/pb/service/${service_id}?community=${idComunidad}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.619" endtime="20250520 11:43:45.620"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.623" endtime="20250520 11:43:45.623"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.624" endtime="20250520 11:43:45.624"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.626" endtime="20250520 11:43:45.626"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${responseJson}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.627" endtime="20250520 11:43:45.627"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${departureId}</var>
<arg>${response.json()}[resources][0][departure][departureId]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.628" endtime="20250520 11:43:45.628"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${departureId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.629" endtime="20250520 11:43:45.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${departureId}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20250520 11:43:45.632" endtime="20250520 11:43:45.633"/>
</kw>
<status status="SKIP" starttime="20250520 11:43:45.615" endtime="20250520 11:43:45.634">Skipped with Skip keyword.</status>
</test>
<test id="s1-t9" name="Make User reservation Admin(No resources)" line="212">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:45.640" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:45.639" endtime="20250520 11:43:45.640"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json; charset=utf-8</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:45.643" level="INFO">${headers} = {'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json; charset=...</msg>
<status status="PASS" starttime="20250520 11:43:45.642" endtime="20250520 11:43:45.643"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=https://stage.allrideapp.com/api/v1/admin/pb/bookService/${service_id}?community=67b879e99a2ba09f940ea7c5</arg>
<arg>data={"userId":"6807a1908ed59d3481d3d16e"}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:46.223" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/admin/pb/bookService/682ca32eb9a3329e44cb4732?community=67b879e99a2ba09f940ea7c5 
 path_url=/api/v1/admin/pb/bookService/682ca32eb9a3329e44cb4732?community=67b879e99a2ba09f940ea7c5 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '37'} 
 body={"userId":"6807a1908ed59d3481d3d16e"} 
 </msg>
<msg timestamp="20250520 11:43:46.223" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/admin/pb/bookService/682ca32eb9a3329e44cb4732?community=67b879e99a2ba09f940ea7c5 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:43:46 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755887', 'ETag': 'W/"3cb-5G+SUihvVWnVaNN/LKgXVuJgE9o"', 'Content-Encoding': 'gzip'} 
 body={"capped":{"enabled":true,"capacity":0,"by":"vehicle"},"restrictPassengers":{"validation":{"enabled":false,"parameters":[]},"reservation":{"enabled":false,"parameters":[]},"visibility":{"enabled":false,"parameters":[]},"enabled":false},"superCommunities":["653fd68233d83952fafcd4be"],"communities":["67b879e99a2ba09f940ea7c5"],"active":true,"hasAssignedResources":false,"blocked":false,"disabled":false,"_id":"682ca32eb9a3329e44cb4732","routeId":"682ca32ab9a3329e44cb45f0","serviceDate":"2025-05-20T16:43:00.000Z","observations":"","apportionByCategories":[],"stopSchedule":[],"resources":[],"reservations":[{"manuallyBooked":true,"_id":"682ca332618f7b6b69a7e8c5","userId":"6807a1908ed59d3481d3d16e","createdAt":"2025-05-20T15:43:46.965Z","updatedAt":"2025-05-20T15:43:46.965Z"}],"stateHistory":[],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"67b879e99a2ba09f940ea7c5","createdAt":"2025-05-20T15:43:42.853Z","updatedAt":"2025-05-20T15:43:46.965Z","__v":1} 
 </msg>
<msg timestamp="20250520 11:43:46.231" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:45.646" endtime="20250520 11:43:46.231"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:43:46.231" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:43:46.231" endtime="20250520 11:43:46.231"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" starttime="20250520 11:43:46.241" endtime="20250520 11:43:46.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:46.243" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:43:46.242" endtime="20250520 11:43:46.243"/>
</kw>
<status status="PASS" starttime="20250520 11:43:45.636" endtime="20250520 11:43:46.245"/>
</test>
<test id="s1-t10" name="Start Departure Leg" line="230">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${CRIS_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:46.249" level="INFO">Creating Session using : alias=mysesion, url=http://179.56.2.122:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:46.249" endtime="20250520 11:43:46.249"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenDriver}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:46.254" level="INFO">${headers} = {'Authorization': 'Bearer af7829e460af7cdde46a8d178446b976426b684c7c475d31b9222eb183775faf249acdd39bafec1fe9dfc83f936cab235bbb454868853cbb2b8a71791cd665bb', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:43:46.252" endtime="20250520 11:43:46.254"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v2/pb/driver/departure</arg>
<arg>data={"busCode":"123","capacity":2,"driverCode":"20","reason":"","routeId":"${scheduleId}","serviceId":"${service_id}","shareToUsers":true,"startLat":-34.394131,"startLon":-70.7814302,"vehicleId":"67b885fcb5ebd5b87145e65f"}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:51.401" level="INFO">POST Request : url=http://179.56.2.122:3000/api/v2/pb/driver/departure 
 path_url=/api/v2/pb/driver/departure 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer af7829e460af7cdde46a8d178446b976426b684c7c475d31b9222eb183775faf249acdd39bafec1fe9dfc83f936cab235bbb454868853cbb2b8a71791cd665bb', 'Content-Type': 'application/json', 'Content-Length': '240'} 
 body={"busCode":"123","capacity":2,"driverCode":"20","reason":"","routeId":"682ca32ab9a3329e44cb45f0","serviceId":"682ca32eb9a3329e44cb4732","shareToUsers":true,"startLat":-34.394131,"startLon":-70.7814302,"vehicleId":"67b885fcb5ebd5b87145e65f"} 
 </msg>
<msg timestamp="20250520 11:43:51.402" level="INFO">POST Response : url=http://179.56.2.122:3000/api/v2/pb/driver/departure 
 status=200, reason=OK 
 headers={'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2351', 'ETag': 'W/"92f-/j4Xq6edIr3Bg1p7ZETYw51E4zk"', 'Date': 'Tue, 20 May 2025 15:43:52 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"restrictPassengers":{"validation":{"enabled":false,"parameters":[]},"reservation":{"enabled":false,"parameters":[]},"visibility":{"enabled":false,"parameters":[]},"enabled":false},"superCommunities":["653fd68233d83952fafcd4be"],"communities":["67b879e99a2ba09f940ea7c5"],"assistantIds":[],"labels":[],"active":true,"sharing":true,"disabled":false,"internal":false,"rounds":0,"distance":0,"scheduled":true,"odd":false,"estimatedDistance":0,"extraMinutes":0,"placeWaitTime":0,"hasExternalGPS":false,"allowsServiceSnapshots":false,"allowsNonServiceSnapshots":false,"allowsSnapshots":false,"allowsDistance":false,"usesOfflineCount":false,"linkedDepartures":[],"_id":"682ca33488ffda109b55f005","serviceId":"682ca32eb9a3329e44cb4732","serviceDate":"2025-05-20T16:43:00.000Z","driverId":"67b884c5b5ebd5b87145e5c3","routeId":"682ca32ab9a3329e44cb45f0","startCapacity":2,"drivers":[],"categories":[],"trail":[],"legs":[{"distance":0,"_id":"682ca33788ffda109b55f01c","type":"service","startedAt":"2025-05-20T15:43:51.118Z","realStartLocation":{"_id":"682ca33788ffda109b55f01d","lat":-34.394131,"lon":-70.7814302,"loc":[-70.7814302,-34.394131]},"driverId":"67b884c5b5ebd5b87145e5c3","preTripChecklist":[],"customParamsAtStart":[],"customParamsAtTheEnd":[]}],"stateHistory":[],"deviceHistory":[],"apportionByCategories":[],"reservations":[{"waitTime":0,"validated":false,"fromApp":false,"manuallyBooked":false,"joined":false,"approvedByDriver":true,"_id":"682ca33488ffda109b55f006","userId":"6807a1908ed59d3481d3d16e","order":0,"state":"pending"}],"enabledSeats":[{"available":true,"_id":"682ca33588ffda109b55f011","seat":"1"},{"available":true,"_id":"682ca33588ffda109b55f012","seat":"2"}],"customParams":[],"customParamsAtTheEnd":[],"preTripChecklist":[],"speedAlerts":[],"deviationAlerts":[],"capacity":1,"busCode":"DOSASIENTOS","driverCode":"20","superCommunityId":"653fd68233d83952fafcd4be","communityId":"67b879e99a2ba09f940ea7c5","vehicleId":"67b885fcb5ebd5b87145e65f","createdAt":"2025-05-20T15:43:49.715Z","updatedAt":"2025-05-20T15:43:51.123Z","__v":1,"realStartLocation":{"_id":"682ca33688ffda109b55f01b","lat":-34.394131,"lon":-70.7814302,"loc":[-70.7814302,-34.394131]},"token":"a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c","startedAt":"2025-05-20T15:43:51.120Z"} 
 </msg>
<msg timestamp="20250520 11:43:51.403" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:46.255" endtime="20250520 11:43:51.404"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:43:51.414" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:43:51.409" endtime="20250520 11:43:51.415"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250520 11:43:51.416" endtime="20250520 11:43:51.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${access_token}</var>
<arg>${response.json()}[token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:51.419" level="INFO">${access_token} = a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c</msg>
<status status="PASS" starttime="20250520 11:43:51.417" endtime="20250520 11:43:51.419"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${departureToken}</var>
<arg>"Bearer " + "${access_token}"</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250520 11:43:51.422" level="INFO">${departureToken} = Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c</msg>
<status status="PASS" starttime="20250520 11:43:51.421" endtime="20250520 11:43:51.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${departureToken}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:51.423" level="INFO">Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c</msg>
<status status="PASS" starttime="20250520 11:43:51.423" endtime="20250520 11:43:51.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:51.425" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:43:51.425" endtime="20250520 11:43:51.426"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${departureToken}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:51.432" level="INFO">${departureToken} = Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c</msg>
<status status="PASS" starttime="20250520 11:43:51.430" endtime="20250520 11:43:51.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()}</arg>
<arg>capacity</arg>
<arg>msg=Departure does not contain capacity, failing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250520 11:43:51.434" endtime="20250520 11:43:51.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()}</arg>
<arg>startCapacity</arg>
<arg>msg=Departure does not contain start capacity, failing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250520 11:43:51.442" endtime="20250520 11:43:51.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${response.json()}</arg>
<arg>reservations</arg>
<arg>msg=Departure does not contain reservations, there should be one reservation</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250520 11:43:51.445" endtime="20250520 11:43:51.449"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${capacity}</var>
<arg>${response.json()}[capacity]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:51.455" level="INFO">${capacity} = 1</msg>
<status status="PASS" starttime="20250520 11:43:51.453" endtime="20250520 11:43:51.455"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${startCapacity}</var>
<arg>${response.json()}[startCapacity]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:51.460" level="INFO">${startCapacity} = 2</msg>
<status status="PASS" starttime="20250520 11:43:51.456" endtime="20250520 11:43:51.460"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${reservations}</var>
<arg>${response.json()}[reservations]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:51.466" level="INFO">${reservations} = [{'waitTime': 0, 'validated': False, 'fromApp': False, 'manuallyBooked': False, 'joined': False, 'approvedByDriver': True, '_id': '682ca33488ffda109b55f006', 'userId': '6807a1908ed59d3481d3d16e', 'ord...</msg>
<status status="PASS" starttime="20250520 11:43:51.464" endtime="20250520 11:43:51.466"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${reservations}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250520 11:43:51.467" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20250520 11:43:51.467" endtime="20250520 11:43:51.467"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${reservations}[0][userId]</arg>
<arg>6807a1908ed59d3481d3d16e</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250520 11:43:51.470" endtime="20250520 11:43:51.471"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.json()}[capacity]</arg>
<arg>1</arg>
<arg>msg=capacity should be 1 but it is ${capacity}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250520 11:43:51.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250520 11:43:51.473" endtime="20250520 11:43:51.478"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.json()}[startCapacity]</arg>
<arg>2</arg>
<arg>msg=Start capacity should be 2 but it is ${startCapacity}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250520 11:43:51.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250520 11:43:51.479" endtime="20250520 11:43:51.482"/>
</kw>
<status status="PASS" starttime="20250520 11:43:46.248" endtime="20250520 11:43:51.484"/>
</test>
<test id="s1-t11" name="Get User QR(Nico) No reservation" line="275">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:51.489" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:51.489" endtime="20250520 11:43:51.491"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:51.496" level="INFO">${headers} = {'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:43:51.495" endtime="20250520 11:43:51.497"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5</arg>
<arg>data={"ids":["67ffe4c453b582b41e2095f4"]}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:52.006" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 path_url=/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json', 'Content-Length': '36'} 
 body={"ids":["67ffe4c453b582b41e2095f4"]} 
 </msg>
<msg timestamp="20250520 11:43:52.007" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:43:52 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755893', 'ETag': 'W/"c8-IukulIccCVt1thAHZfApPcRsAzk"', 'Content-Encoding': 'gzip'} 
 body=[{"_id":"67ffe4c453b582b41e2095f4","qrCode":"b6564e7aa7e37da0a5c7c0d9c2c43727ec3feafa3d09a69e136e497657bb77372c8201d3437aa969e09b0726b449e23cb98391335250dc7314bd6b0b113b5f7667ffe4c453b582b41e2095f4"}] 
 </msg>
<msg timestamp="20250520 11:43:52.009" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:51.499" endtime="20250520 11:43:52.009"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:43:52.014" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:43:52.012" endtime="20250520 11:43:52.015"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250520 11:43:52.015" endtime="20250520 11:43:52.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${qrCodeNico}</var>
<arg>${response.json()}[0][qrCode]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:52.018" level="INFO">${qrCodeNico} = b6564e7aa7e37da0a5c7c0d9c2c43727ec3feafa3d09a69e136e497657bb77372c8201d3437aa969e09b0726b449e23cb98391335250dc7314bd6b0b113b5f7667ffe4c453b582b41e2095f4</msg>
<status status="PASS" starttime="20250520 11:43:52.017" endtime="20250520 11:43:52.019"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${qrCodeNico}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:52.022" level="INFO">${qrCodeNico} = b6564e7aa7e37da0a5c7c0d9c2c43727ec3feafa3d09a69e136e497657bb77372c8201d3437aa969e09b0726b449e23cb98391335250dc7314bd6b0b113b5f7667ffe4c453b582b41e2095f4</msg>
<status status="PASS" starttime="20250520 11:43:52.021" endtime="20250520 11:43:52.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${qrCodeNico}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:52.025" level="INFO">b6564e7aa7e37da0a5c7c0d9c2c43727ec3feafa3d09a69e136e497657bb77372c8201d3437aa969e09b0726b449e23cb98391335250dc7314bd6b0b113b5f7667ffe4c453b582b41e2095f4</msg>
<status status="PASS" starttime="20250520 11:43:52.024" endtime="20250520 11:43:52.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:52.029" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:43:52.028" endtime="20250520 11:43:52.029"/>
</kw>
<status status="PASS" starttime="20250520 11:43:51.487" endtime="20250520 11:43:52.031"/>
</test>
<test id="s1-t12" name="Get User QR(User2) No reservation" line="296">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:52.037" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:52.035" endtime="20250520 11:43:52.038"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:52.041" level="INFO">${headers} = {'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:43:52.039" endtime="20250520 11:43:52.041"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5</arg>
<arg>data={"ids":["6769bb1e460d85c5125f14bb"]}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:52.550" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 path_url=/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json', 'Content-Length': '36'} 
 body={"ids":["6769bb1e460d85c5125f14bb"]} 
 </msg>
<msg timestamp="20250520 11:43:52.551" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:43:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755894', 'ETag': 'W/"c8-6W9RLO5CJzCdQheE9Yfw+FSbTvE"', 'Content-Encoding': 'gzip'} 
 body=[{"_id":"6769bb1e460d85c5125f14bb","qrCode":"9c39f00d05d7c9c00da710b6b30a794830c0ae0fd72aa36b011fe0766de3dae3e241b763aeacca1dbd00ad04e83b2bde1ae912472c4e9efbd3971ccc801f59216769bb1e460d85c5125f14bb"}] 
 </msg>
<msg timestamp="20250520 11:43:52.551" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:52.044" endtime="20250520 11:43:52.551"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:43:52.558" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:43:52.554" endtime="20250520 11:43:52.558"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250520 11:43:52.562" endtime="20250520 11:43:52.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${qrCodeUser2}</var>
<arg>${response.json()}[0][qrCode]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:52.568" level="INFO">${qrCodeUser2} = 9c39f00d05d7c9c00da710b6b30a794830c0ae0fd72aa36b011fe0766de3dae3e241b763aeacca1dbd00ad04e83b2bde1ae912472c4e9efbd3971ccc801f59216769bb1e460d85c5125f14bb</msg>
<status status="PASS" starttime="20250520 11:43:52.567" endtime="20250520 11:43:52.568"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${qrCodeUser2}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:52.570" level="INFO">${qrCodeUser2} = 9c39f00d05d7c9c00da710b6b30a794830c0ae0fd72aa36b011fe0766de3dae3e241b763aeacca1dbd00ad04e83b2bde1ae912472c4e9efbd3971ccc801f59216769bb1e460d85c5125f14bb</msg>
<status status="PASS" starttime="20250520 11:43:52.570" endtime="20250520 11:43:52.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${qrCodeUser2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:52.572" level="INFO">9c39f00d05d7c9c00da710b6b30a794830c0ae0fd72aa36b011fe0766de3dae3e241b763aeacca1dbd00ad04e83b2bde1ae912472c4e9efbd3971ccc801f59216769bb1e460d85c5125f14bb</msg>
<status status="PASS" starttime="20250520 11:43:52.572" endtime="20250520 11:43:52.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:52.575" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:43:52.575" endtime="20250520 11:43:52.576"/>
</kw>
<status status="PASS" starttime="20250520 11:43:52.034" endtime="20250520 11:43:52.578"/>
</test>
<test id="s1-t13" name="Get User QR(User2) Has reservation" line="317">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:52.586" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:52.585" endtime="20250520 11:43:52.587"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:52.589" level="INFO">${headers} = {'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:43:52.588" endtime="20250520 11:43:52.590"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5</arg>
<arg>data={"ids":["6807a1908ed59d3481d3d16e"]}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:53.114" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 path_url=/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json', 'Content-Length': '36'} 
 body={"ids":["6807a1908ed59d3481d3d16e"]} 
 </msg>
<msg timestamp="20250520 11:43:53.115" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/admin/users/qrCodes?community=67b879e99a2ba09f940ea7c5 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:43:53 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755894', 'ETag': 'W/"c8-Z6qfo8BDLehj/7c247BJJR2yl5M"', 'Content-Encoding': 'gzip'} 
 body=[{"_id":"6807a1908ed59d3481d3d16e","qrCode":"2ca34f2699660211e40067dc52fbbd102bdeddedcc6743657d3430203159a85e3f4fe12a585019671107c631d907556a7ee48a38783f6c9342e4cbe777d7789e6807a1908ed59d3481d3d16e"}] 
 </msg>
<msg timestamp="20250520 11:43:53.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:52.591" endtime="20250520 11:43:53.118"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:43:53.124" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:43:53.121" endtime="20250520 11:43:53.125"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250520 11:43:53.126" endtime="20250520 11:43:53.126"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${qrCodeUser3}</var>
<arg>${response.json()}[0][qrCode]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250520 11:43:53.130" level="INFO">${qrCodeUser3} = 2ca34f2699660211e40067dc52fbbd102bdeddedcc6743657d3430203159a85e3f4fe12a585019671107c631d907556a7ee48a38783f6c9342e4cbe777d7789e6807a1908ed59d3481d3d16e</msg>
<status status="PASS" starttime="20250520 11:43:53.128" endtime="20250520 11:43:53.131"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${qrCodeUser3}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250520 11:43:53.132" level="INFO">${qrCodeUser3} = 2ca34f2699660211e40067dc52fbbd102bdeddedcc6743657d3430203159a85e3f4fe12a585019671107c631d907556a7ee48a38783f6c9342e4cbe777d7789e6807a1908ed59d3481d3d16e</msg>
<status status="PASS" starttime="20250520 11:43:53.131" endtime="20250520 11:43:53.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${qrCodeUser3}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:53.134" level="INFO">2ca34f2699660211e40067dc52fbbd102bdeddedcc6743657d3430203159a85e3f4fe12a585019671107c631d907556a7ee48a38783f6c9342e4cbe777d7789e6807a1908ed59d3481d3d16e</msg>
<status status="PASS" starttime="20250520 11:43:53.133" endtime="20250520 11:43:53.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:53.138" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:43:53.137" endtime="20250520 11:43:53.139"/>
</kw>
<status status="PASS" starttime="20250520 11:43:52.582" endtime="20250520 11:43:53.141"/>
</test>
<test id="s1-t14" name="Validate With QR, No reservation Should pass" line="339">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${CRIS_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:53.145" level="INFO">Creating Session using : alias=mysesion, url=http://179.56.2.122:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:53.144" endtime="20250520 11:43:53.145"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${departureToken}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:53.150" level="INFO">${headers} = {'Authorization': 'Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:43:53.149" endtime="20250520 11:43:53.150"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v1/pb/provider/departures/validate</arg>
<arg>data={"validationString": "${qrCodeNico}"}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:55.702" level="INFO">POST Request : url=http://179.56.2.122:3000/api/v1/pb/provider/departures/validate 
 path_url=/api/v1/pb/provider/departures/validate 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"validationString": "b6564e7aa7e37da0a5c7c0d9c2c43727ec3feafa3d09a69e136e497657bb77372c8201d3437aa969e09b0726b449e23cb98391335250dc7314bd6b0b113b5f7667ffe4c453b582b41e2095f4"} 
 </msg>
<msg timestamp="20250520 11:43:55.703" level="INFO">POST Response : url=http://179.56.2.122:3000/api/v1/pb/provider/departures/validate 
 status=200, reason=OK 
 headers={'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'Date': 'Tue, 20 May 2025 15:43:54 GMT', 'X-RateLimit-Reset': '1747755895', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '817', 'ETag': 'W/"331-jE8oeIVXKlzv7a1FTkpZrcAhSRg"', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"busValidationParams":{"preValidationPassenger":{"answers":[]},"driver":{"answers":[]},"validatedPassenger":{"answers":[]}},"validated":true,"reason":[],"_id":"682ca33a88ffda109b55f028","routeId":"682ca32ab9a3329e44cb45f0","departureId":"682ca33488ffda109b55f005","serviceId":"682ca32eb9a3329e44cb4732","validationString":"b6564e7aa7e37da0a5c7c0d9c2c43727ec3feafa3d09a69e136e497657bb77372c8201d3437aa969e09b0726b449e23cb98391335250dc7314bd6b0b113b5f7667ffe4c453b582b41e2095f4","history":[],"userId":"67ffe4c453b582b41e2095f4","communityId":"67b879e99a2ba09f940ea7c5","assignedSeat":"1","createdAt":"2025-05-20T15:43:55.893Z","updatedAt":"2025-05-20T15:43:55.893Z","__v":0,"user":{"_id":"67ffe4c453b582b41e2095f4","name":"Elizabeth Solis","avatar":"https://s3.amazonaws.com/adedo.users-avatars/user_placeholder.png"}} 
 </msg>
<msg timestamp="20250520 11:43:55.704" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:53.151" endtime="20250520 11:43:55.705"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250520 11:43:55.707" endtime="20250520 11:43:55.708"/>
</kw>
<status status="PASS" starttime="20250520 11:43:53.142" endtime="20250520 11:43:55.710"/>
</test>
<test id="s1-t15" name="Validate With QR, No reservation Should not pass(No seats left)" line="353">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${CRIS_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:55.715" level="INFO">Creating Session using : alias=mysesion, url=http://179.56.2.122:3000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:55.714" endtime="20250520 11:43:55.716"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${departureToken}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:55.721" level="INFO">${headers} = {'Authorization': 'Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:43:55.720" endtime="20250520 11:43:55.721"/>
</kw>
<kw name="Run Keyword And Expect Error" library="BuiltIn">
<var>${response}</var>
<arg>HTTPError: 403 Client Error: Forbidden for url: https://stage.allrideapp.com/api/v1/pb/provider/departures/validate</arg>
<arg>POST On Session</arg>
<arg>mysesion</arg>
<arg>url=/api/v1/pb/provider/departures/validate</arg>
<arg>data={"validationString": "${qrCodeUser2}"}</arg>
<arg>headers=${headers}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<kw name="POST On Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>url=/api/v1/pb/provider/departures/validate</arg>
<arg>data={"validationString": "${qrCodeUser2}"}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:58.165" level="INFO">POST Request : url=http://179.56.2.122:3000/api/v1/pb/provider/departures/validate 
 path_url=/api/v1/pb/provider/departures/validate 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"validationString": "9c39f00d05d7c9c00da710b6b30a794830c0ae0fd72aa36b011fe0766de3dae3e241b763aeacca1dbd00ad04e83b2bde1ae912472c4e9efbd3971ccc801f59216769bb1e460d85c5125f14bb"} 
 </msg>
<msg timestamp="20250520 11:43:58.165" level="INFO">POST Response : url=http://179.56.2.122:3000/api/v1/pb/provider/departures/validate 
 status=200, reason=OK 
 headers={'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'Date': 'Tue, 20 May 2025 15:43:56 GMT', 'X-RateLimit-Reset': '1747755897', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '835', 'ETag': 'W/"343-0AGAP33w2L0uPBtl65o4us0pwJo"', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"busValidationParams":{"preValidationPassenger":{"answers":[]},"driver":{"answers":[]},"validatedPassenger":{"answers":[]}},"validated":true,"reason":[],"_id":"682ca33c88ffda109b55f03c","routeId":"682ca32ab9a3329e44cb45f0","departureId":"682ca33488ffda109b55f005","serviceId":"682ca32eb9a3329e44cb4732","validationString":"9c39f00d05d7c9c00da710b6b30a794830c0ae0fd72aa36b011fe0766de3dae3e241b763aeacca1dbd00ad04e83b2bde1ae912472c4e9efbd3971ccc801f59216769bb1e460d85c5125f14bb","history":[],"userId":"6769bb1e460d85c5125f14bb","communityId":"67b879e99a2ba09f940ea7c5","assignedSeat":"2","createdAt":"2025-05-20T15:43:58.396Z","updatedAt":"2025-05-20T15:43:58.396Z","__v":0,"user":{"_id":"6769bb1e460d85c5125f14bb","name":"Mariela Abigail Aguilar Cárdenas","avatar":"https://s3.amazonaws.com/adedo.users-avatars/user_placeholder.png"}} 
 </msg>
<status status="PASS" starttime="20250520 11:43:55.723" endtime="20250520 11:43:58.165"/>
</kw>
<msg timestamp="20250520 11:43:58.165" level="FAIL">Expected error 'HTTPError: 403 Client Error: Forbidden for url: https://stage.allrideapp.com/api/v1/pb/provider/departures/validate' did not occur.</msg>
<status status="FAIL" starttime="20250520 11:43:55.721" endtime="20250520 11:43:58.165"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>403</arg>
<arg>msg=User should not be able to validate due to previous reservation and not capacity left</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" starttime="20250520 11:43:58.165" endtime="20250520 11:43:58.165"/>
</kw>
<status status="FAIL" starttime="20250520 11:43:55.713" endtime="20250520 11:43:58.171">Expected error 'HTTPError: 403 Client Error: Forbidden for url: https://stage.allrideapp.com/api/v1/pb/provider/departures/validate' did not occur.</status>
</test>
<test id="s1-t16" name="Validate With QR, Should pass(hasReservation)" line="367">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:58.177" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:58.171" endtime="20250520 11:43:58.177"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${departureToken}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:58.181" level="INFO">${headers} = {'Authorization': 'Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:43:58.181" endtime="20250520 11:43:58.181"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v1/pb/provider/departures/validate</arg>
<arg>data={"validationString": "${qrCodeUser3}"}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:58.849" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/pb/provider/departures/validate 
 path_url=/api/v1/pb/provider/departures/validate 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c', 'Content-Type': 'application/json', 'Content-Length': '176'} 
 body={"validationString": "2ca34f2699660211e40067dc52fbbd102bdeddedcc6743657d3430203159a85e3f4fe12a585019671107c631d907556a7ee48a38783f6c9342e4cbe777d7789e6807a1908ed59d3481d3d16e"} 
 </msg>
<msg timestamp="20250520 11:43:58.851" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/pb/provider/departures/validate 
 status=403, reason=Forbidden 
 headers={'Date': 'Tue, 20 May 2025 15:43:59 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1747755900', 'ETag': 'W/"213-B06PEUuOXNh56XqUA+JgL86fv+A"', 'Content-Encoding': 'gzip'} 
 body=&lt;html&gt;&lt;head&gt;&lt;title&gt;Error 403 - An error has occurred&lt;/title&gt;&lt;meta charset="utf-8"/&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/&gt;&lt;link rel="stylesheet" href="/css/bootstrap.css"/&gt;&lt;link rel="stylesheet" href="/css/app.css"/&gt;&lt;body&gt;&lt;div class="container"&gt;&lt;div class="text-center" style="margin-top: 50px"&gt;&lt;img class="img-fluid" src="/img/allride_error.png"/&gt;&lt;div class="h3"&gt;403 - An error has occurred&lt;/div&gt;&lt;div class="h4"&gt;But everything is under control.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/head&gt;&lt;/html&gt; 
 </msg>
<msg timestamp="20250520 11:43:58.853" level="FAIL">HTTPError: 403 Client Error: Forbidden for url: https://stage.allrideapp.com/api/v1/pb/provider/departures/validate</msg>
<status status="FAIL" starttime="20250520 11:43:58.183" endtime="20250520 11:43:58.859"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" starttime="20250520 11:43:58.860" endtime="20250520 11:43:58.860"/>
</kw>
<status status="FAIL" starttime="20250520 11:43:58.171" endtime="20250520 11:43:58.861">HTTPError: 403 Client Error: Forbidden for url: https://stage.allrideapp.com/api/v1/pb/provider/departures/validate</status>
</test>
<test id="s1-t17" name="Stop Post Leg Departure" line="382">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:43:58.865" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:43:58.865" endtime="20250520 11:43:58.866"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${departureToken}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:43:58.868" level="INFO">${headers} = {'Authorization': 'Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:43:58.867" endtime="20250520 11:43:58.868"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v2/pb/driver/departure/stop</arg>
<arg>data={"customParamsAtEnd":[],"customParamsAtStart":null,"endLat":"-72.6071614","endLon":"-38.7651863","nextLeg":false,"post":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"pre":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"preTripChecklist":null,"service":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"shareToUsers":false}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:43:59.567" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v2/pb/driver/departure/stop 
 path_url=/api/v2/pb/driver/departure/stop 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c', 'Content-Type': 'application/json', 'Content-Length': '415'} 
 body={"customParamsAtEnd":[],"customParamsAtStart":null,"endLat":"-72.6071614","endLon":"-38.7651863","nextLeg":false,"post":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"pre":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"preTripChecklist":null,"service":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"shareToUsers":false} 
 </msg>
<msg timestamp="20250520 11:43:59.568" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v2/pb/driver/departure/stop 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:44:00 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'ETag': 'W/"ab6-3xhgNJNttSQTLj3zAy9+oImMh2M"', 'Content-Encoding': 'gzip'} 
 body={"restrictPassengers":{"validation":{"enabled":false,"parameters":[]},"reservation":{"enabled":false,"parameters":[]},"visibility":{"enabled":false,"parameters":[]},"enabled":false},"superCommunities":["653fd68233d83952fafcd4be"],"communities":["67b879e99a2ba09f940ea7c5"],"assistantIds":[],"labels":[],"active":false,"sharing":true,"disabled":false,"internal":false,"rounds":0,"distance":0,"scheduled":true,"odd":false,"estimatedDistance":0,"extraMinutes":0,"placeWaitTime":0,"hasExternalGPS":false,"allowsServiceSnapshots":false,"allowsNonServiceSnapshots":false,"allowsSnapshots":false,"allowsDistance":false,"usesOfflineCount":false,"linkedDepartures":[],"_id":"682ca33488ffda109b55f005","serviceId":"682ca32eb9a3329e44cb4732","serviceDate":"2025-05-20T16:43:00.000Z","driverId":"67b884c5b5ebd5b87145e5c3","routeId":"682ca32ab9a3329e44cb45f0","startCapacity":2,"drivers":[],"categories":[],"trail":[],"legs":[{"distance":0,"_id":"682ca33788ffda109b55f01c","type":"service","startedAt":"2025-05-20T15:43:51.118Z","realStartLocation":{"_id":"682ca33788ffda109b55f01d","lat":-34.394131,"lon":-70.7814302,"loc":[-70.7814302,-34.394131]},"driverId":"67b884c5b5ebd5b87145e5c3","preTripChecklist":[],"customParamsAtStart":[],"customParamsAtTheEnd":[],"realEndLocation":{"_id":"682ca340618f7b6b69a7eaaf","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"endedAt":"2025-05-20T15:44:00.169Z"}],"stateHistory":[],"deviceHistory":[],"apportionByCategories":[],"reservations":[{"waitTime":0,"validated":false,"fromApp":false,"manuallyBooked":false,"joined":false,"approvedByDriver":true,"_id":"682ca33488ffda109b55f006","userId":"6807a1908ed59d3481d3d16e","order":0,"state":"pending"}],"enabledSeats":[{"available":false,"_id":"682ca33588ffda109b55f011","seat":"1","userId":"67ffe4c453b582b41e2095f4"},{"available":false,"_id":"682ca33588ffda109b55f012","seat":"2","userId":"6769bb1e460d85c5125f14bb"}],"customParams":[],"customParamsAtTheEnd":[],"preTripChecklist":[],"speedAlerts":[],"deviationAlerts":[],"capacity":0,"busCode":"DOSASIENTOS","driverCode":"20","superCommunityId":"653fd68233d83952fafcd4be","communityId":"67b879e99a2ba09f940ea7c5","vehicleId":"67b885fcb5ebd5b87145e65f","createdAt":"2025-05-20T15:43:49.715Z","updatedAt":"2025-05-20T15:43:58.250Z","__v":1,"realStartLocation":{"_id":"682ca33688ffda109b55f01b","lat":-34.394131,"lon":-70.7814302,"loc":[-70.7814302,-34.394131]},"startedAt":"2025-05-20T15:43:51.120Z","token":"a3a4006e434b819b8c5994af4460bfb708aa80ab138bb795e480886c34ed5f5df68131bb1007d9a6d80730c3122e221d33decc1aa9bd181c57a0f792e6639c0c","realEndLocation":{"_id":"682ca340618f7b6b69a7eab0","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"endedAt":"2025-05-20T15:44:00.169Z"} 
 </msg>
<msg timestamp="20250520 11:43:59.570" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:43:58.871" endtime="20250520 11:43:59.570"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:43:59.575" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:43:59.573" endtime="20250520 11:43:59.575"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250520 11:43:59.577" endtime="20250520 11:43:59.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:43:59.579" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:43:59.578" endtime="20250520 11:43:59.579"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250520 11:44:09.590" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20250520 11:43:59.581" endtime="20250520 11:44:09.592"/>
</kw>
<status status="PASS" starttime="20250520 11:43:58.863" endtime="20250520 11:44:09.597"/>
</test>
<test id="s1-t18" name="Delete Route" line="404">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250520 11:44:09.602" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250520 11:44:09.602" endtime="20250520 11:44:09.603"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250520 11:44:09.605" level="INFO">${headers} = {'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250520 11:44:09.604" endtime="20250520 11:44:09.605"/>
</kw>
<kw name="DELETE On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v1/admin/pb/routes/${scheduleId}?community=653fd601f90509541a748683</arg>
<arg>data={}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<msg timestamp="20250520 11:44:10.129" level="INFO">DELETE Request : url=https://stage.allrideapp.com/api/v1/admin/pb/routes/682ca32ab9a3329e44cb45f0?community=653fd601f90509541a748683 
 path_url=/api/v1/admin/pb/routes/682ca32ab9a3329e44cb45f0?community=653fd601f90509541a748683 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 68fd24598801ef2c015d5603a7ac122a41e13c7db543d4a48488c4a45c3560bdb134b8b9e90ea657f34e835fcb02398f74e6bd3ed5975f3e928ec681d4eba214', 'Content-Type': 'application/json', 'Content-Length': '2'} 
 body={} 
 </msg>
<msg timestamp="20250520 11:44:10.131" level="INFO">DELETE Response : url=https://stage.allrideapp.com/api/v1/admin/pb/routes/682ca32ab9a3329e44cb45f0?community=653fd601f90509541a748683 
 status=200, reason=OK 
 headers={'Date': 'Tue, 20 May 2025 15:44:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '198', 'X-RateLimit-Reset': '1747755900', 'ETag': 'W/"1752-drAEse82z+h//KfZmvPK3zBywhY"', 'Content-Encoding': 'gzip'} 
 body={"trail":{"enabled":false,"adjustByRounds":false},"rounds":{"enabled":false,"anchorStops":[]},"notifyUsersByStop":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[],"destinataries":"admins"},"enabled":false},"notifyUnboardedPassengers":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[],"destinataries":"admins"},"enabled":false,"sendAt":"eachStop"},"notifyPassengersWithoutReservation":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[],"destinataries":"admins"},"enabled":false,"sendAt":"eachStop"},"notifySkippedStop":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[],"destinataries":"admins"},"enabled":false},"excludePassengers":{"active":false,"excludeType":"dontHide"},"scheduling":{"lateNotification":{"enabled":false,"amount":0,"unit":"minutes"},"stopNotification":{"enabled":false,"amount":0,"unit":"minutes"},"startLimit":{"upperLimit":{"amount":60,"unit":"minutes"},"lowerLimit":{"amount":30,"unit":"minutes"}},"notifyAdmins":{"fullService":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[]},"enabled":false},"serviceCanceled":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[]},"enabled":false}},"serviceCreationLimit":{"enabled":false,"date":null},"enabled":true,"stopOnReservation":false,"limitUnit":"minutes","limitAmount":30,"defaultServiceCost":null,"schedule":[{"capped":{"enabled":true,"capacity":0,"by":"vehicle"},"restrictPassengers":{"validation":{"enabled":false,"conditional":"or","parameters":[],"parameter":[]},"reservation":{"enabled":false,"conditional":"or","parameters":[],"parameter":[]},"visibility":{"enabled":false,"conditional":"or","parameters":[],"parameter":[]},"enabled":false},"reservations":{"enabled":false,"list":[]},"enabled":true,"_id":"682ca32ab9a3329e44cb45f7","day":"tue","time":"12:43","estimatedArrival":null,"stopSchedule":[],"vehicleCategoryId":null,"defaultResources":[],"serviceCost":0,"observations":""}],"restrictions":{"customParams":{"enabled":false,"params":[]},"byQuantity":{"unit":"days","userSkip":[]},"_id":"682ca32ab9a3329e44cb45f8"}},"rating":{"enabled":false,"withValidation":false},"endDepartureNotice":{"enabled":false,"lastStop":null},"restrictPassengers":{"validation":{"enabled":false,"conditional":"or","excludes":false,"parameters":[]},"reservation":{"enabled":false,"conditional":"or","excludes":false,"parameters":[]},"visibility":{"enabled":false,"conditional":"or","excludes":false,"parameters":[]},"enabled":false},"snapshots":{"enabled":false},"validationParams":{"driverParams":[],"passengerParams":[]},"canResume":{"timeLimit":{"enabled":false,"amount":5,"unit":"minutes"},"enabled":false},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"validateDeparture":{"enabled":false},"minimumConfirmationTime":{"enabled":false,"amount":1,"unit":"hours"},"minimumTimeToForceDeparture":{"enabled":false,"amount":5,"unit":"minutes"},"externalInfo":{"uuid":""},"endServiceLegAutomatically":{"estimatedDuration":{"byTime":{"unit":"minutes"}},"timer":{"amount":5,"unit":"minutes"},"distance":100,"enabled":false,"stopId":null},"autoStartConditions":{"delay":{"enabled":false,"time":0,"unit":"minutes"},"nearRoute":{"enabled":false,"distance":0},"enabled":false,"ignition":false,"acceptedStatus":false},"codeValidationOptions":{"type":"qr","failureMessage":"Solo puedes presentar el código de AllRide o de tu DNI de identidad.","showRejected":true,"enabled":false},"DNIValidation":{"enabled":false,"options":["qr"]},"routeDeviation":{"maxDistance":100,"maxTime":5,"enabled":false},"validation":{"external":[]},"restrictions":{"external":[]},"assistantIds":[],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["67b879e99a2ba09f940ea7c5"],"active":false,"visible":true,"internal":false,"anchorStops":[],"isStatic":false,"labels":[],"hasExternalGPS":false,"hasCapacity":false,"hasBeacons":false,"hasRounds":false,"hasBoardingCount":false,"hasUnboardingCount":false,"usesBusCode":false,"usesVehicleList":true,"dynamicSeatAssignment":true,"usesDriverCode":false,"usesDriverPin":false,"usesTickets":false,"usesPasses":false,"usesTextToSpeech":false,"allowsManualValidation":false,"allowsRating":false,"allowsOnlyExistingDrivers":false,"allowsMultipleDrivers":false,"allowsDebugging":false,"startsOnStop":false,"notNearStop":false,"allowsNonServiceSnapshots":false,"allowsServiceSnapshots":false,"allowsDistance":false,"usesOfflineCount":false,"hasBoardings":false,"hasUnboardings":false,"usesManualSeat":false,"noPassengerInfo":false,"showParable":false,"showStops":true,"allowGenericVehicles":false,"usesVehicleQRLink":false,"skipDeclaration":false,"skipQRValidation":false,"assistantAssignsSeat":true,"hasBarrier":false,"_id":"682ca32ab9a3329e44cb45f0","name":"Autoasignar","shapeId":"67fd1ec97b753207e7fcfb0d","description":"Autoasignar","extraInfo":"","color":"602e2e","legOptions":[{"startConditions":{"location":{"stopIds":[],"enabled":false,"type":"near"},"schedule":{"enabled":false,"amount":0,"unit":"minutes"}},"moveToNextLegAutomatically":{"distance":100,"enabled":false,"stopId":null},"ETA":{"notify":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[]}},"visibility":[]},"providers":[],"_id":"682ca32ab9a3329e44cb45f1","legType":"service","preTripChecklist":{"enabled":false,"params":[]},"customParamsAtStart":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]}}],"useServiceReservations":false,"ownerIds":[{"_id":"682ca32ab9a3329e44cb45f6","id":"67b879e99a2ba09f940ea7c5","role":"community"}],"segments":[],"roundOrder":[],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"67b879e99a2ba09f940ea7c5","timeOnRoute":9,"distance":5,"distanceInMeters":5105,"originStop":"67b883869a2ba09f940eaa14","destinationStop":"67b883979a2ba09f940eaa20","customParams":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"createdAt":"2025-05-20T15:43:38.641Z","updatedAt":"2025-05-20T15:44:10.857Z","__v":1,"deletedAt":"2025-05-20T15:44:10.850Z"} 
 </msg>
<msg timestamp="20250520 11:44:10.131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250520 11:44:09.606" endtime="20250520 11:44:10.132"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250520 11:44:10.142" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250520 11:44:10.134" endtime="20250520 11:44:10.143"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250520 11:44:10.144" endtime="20250520 11:44:10.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250520 11:44:10.147" level="INFO">200</msg>
<status status="PASS" starttime="20250520 11:44:10.146" endtime="20250520 11:44:10.147"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250520 11:44:15.164" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20250520 11:44:10.149" endtime="20250520 11:44:15.164"/>
</kw>
<status status="PASS" starttime="20250520 11:44:09.601" endtime="20250520 11:44:15.166"/>
</test>
<status status="FAIL" starttime="20250520 11:43:36.829" endtime="20250520 11:44:15.169"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="2" skip="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="2" skip="2" id="s1" name="autoAssignedService(With reservations)">autoAssignedService(With reservations)</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
