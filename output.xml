<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.12 on win32)" generated="20250702 17:00:59.485" rpa="false" schemaversion="4">
<suite id="s1" name="extTestCases" source="c:\Users\UsuarioCompuElite\Documents\GitHub\Respaldo\AllRide Test Cases\Test Cases\Scheduled Flow\ScheduledTickets\extTestCases.robot">
<test id="s1-t1" name="Set Date Variables" line="15">
<kw name="Get Current Date" library="DateTime">
<var>${fecha_hoy}</var>
<arg>result_format=%Y-%m-%d</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250702 17:00:59.919" level="INFO">${fecha_hoy} = 2025-07-02</msg>
<status status="PASS" starttime="20250702 17:00:59.919" endtime="20250702 17:00:59.920"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${fecha_hoy}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.922" level="INFO">${fecha_hoy} = 2025-07-02</msg>
<status status="PASS" starttime="20250702 17:00:59.922" endtime="20250702 17:00:59.922"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${fecha_manana}</var>
<arg>${fecha_hoy}</arg>
<arg>1 days</arg>
<arg>result_format=%Y-%m-%d</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250702 17:00:59.925" level="INFO">${fecha_manana} = 2025-07-03</msg>
<status status="PASS" starttime="20250702 17:00:59.922" endtime="20250702 17:00:59.925"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${fecha_manana}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.925" level="INFO">${fecha_manana} = 2025-07-03</msg>
<status status="PASS" starttime="20250702 17:00:59.925" endtime="20250702 17:00:59.925"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${fecha_pasado_manana}</var>
<arg>${fecha_hoy}</arg>
<arg>2 days</arg>
<arg>result_format=%Y-%m-%d</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250702 17:00:59.926" level="INFO">${fecha_pasado_manana} = 2025-07-04</msg>
<status status="PASS" starttime="20250702 17:00:59.926" endtime="20250702 17:00:59.926"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${fecha_pasado_manana}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.927" level="INFO">${fecha_pasado_manana} = 2025-07-04</msg>
<status status="PASS" starttime="20250702 17:00:59.927" endtime="20250702 17:00:59.927"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${fecha_pasado_pasado_manana}</var>
<arg>${fecha_hoy}</arg>
<arg>3 days</arg>
<arg>result_format=%Y-%m-%d</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250702 17:00:59.927" level="INFO">${fecha_pasado_pasado_manana} = 2025-07-05</msg>
<status status="PASS" starttime="20250702 17:00:59.927" endtime="20250702 17:00:59.929"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${fecha_pasado_pasado_manana}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.930" level="INFO">${fecha_pasado_pasado_manana} = 2025-07-05</msg>
<status status="PASS" starttime="20250702 17:00:59.929" endtime="20250702 17:00:59.930"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${dia_actual}</var>
<arg>${fecha_hoy}</arg>
<arg>result_format=%a</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250702 17:00:59.931" level="INFO">${dia_actual} = Wed</msg>
<status status="PASS" starttime="20250702 17:00:59.930" endtime="20250702 17:00:59.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dia_actual_lower}</var>
<arg>${dia_actual.lower()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.932" level="INFO">${dia_actual_lower} = wed</msg>
<status status="PASS" starttime="20250702 17:00:59.931" endtime="20250702 17:00:59.932"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${arrival_date}</var>
<arg>${fecha_manana}T01:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.933" level="INFO">${arrival_date} = 2025-07-03T01:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.932" endtime="20250702 17:00:59.933"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${arrival_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.933" level="INFO">${arrival_date} = 2025-07-03T01:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.933" endtime="20250702 17:00:59.933"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${r_estimated_arrival1}</var>
<arg>${fecha_manana}T14:45:57.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.934" level="INFO">${r_estimated_arrival1} = 2025-07-03T14:45:57.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.934" endtime="20250702 17:00:59.934"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${r_estimated_arrival1}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.935" level="INFO">${r_estimated_arrival1} = 2025-07-03T14:45:57.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.934" endtime="20250702 17:00:59.935"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_date}</var>
<arg>${fecha_manana}T00:25:29.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.936" level="INFO">${service_date} = 2025-07-03T00:25:29.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.935" endtime="20250702 17:00:59.936"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${service_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.936" level="INFO">${service_date} = 2025-07-03T00:25:29.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.936" endtime="20250702 17:00:59.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modified_arrival_date}</var>
<arg>${fecha_manana}T01:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.938" level="INFO">${modified_arrival_date} = 2025-07-03T01:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.936" endtime="20250702 17:00:59.938"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modified_arrival_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.938" level="INFO">${modified_arrival_date} = 2025-07-03T01:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.938" endtime="20250702 17:00:59.939"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${r_modified_estimated_arrival}</var>
<arg>${fecha_pasado_manana}T14:45:57.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.939" level="INFO">${r_modified_estimated_arrival} = 2025-07-04T14:45:57.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.939" endtime="20250702 17:00:59.939"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${r_modified_estimated_arrival}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.940" level="INFO">${r_modified_estimated_arrival} = 2025-07-04T14:45:57.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.939" endtime="20250702 17:00:59.940"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${modified_service_date}</var>
<arg>${fecha_manana}T00:25:29.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.940" level="INFO">${modified_service_date} = 2025-07-03T00:25:29.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.940" endtime="20250702 17:00:59.940"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${modified_service_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.941" level="INFO">${modified_service_date} = 2025-07-03T00:25:29.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.940" endtime="20250702 17:00:59.941"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_date_20min}</var>
<arg>${fecha_manana}T00:20:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.941" level="INFO">${service_date_20min} = 2025-07-03T00:20:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.941" endtime="20250702 17:00:59.941"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${service_date_20min}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.942" level="INFO">${service_date_20min} = 2025-07-03T00:20:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.942" endtime="20250702 17:00:59.942"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_date_22min}</var>
<arg>${fecha_manana}T00:47:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.943" level="INFO">${service_date_22min} = 2025-07-03T00:47:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.943" endtime="20250702 17:00:59.943"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${service_date_22min}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.944" level="INFO">${service_date_22min} = 2025-07-03T00:47:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.943" endtime="20250702 17:00:59.944"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${start_date}</var>
<arg>${fecha_manana}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.944" level="INFO">${start_date} = 2025-07-03T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.944" endtime="20250702 17:00:59.944"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${start_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.945" level="INFO">${start_date} = 2025-07-03T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.945" endtime="20250702 17:00:59.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date_4weeks}</var>
<arg>2023-12-30T02:59:59.999Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.945" level="INFO">${end_date_4weeks} = 2023-12-30T02:59:59.999Z</msg>
<status status="PASS" starttime="20250702 17:00:59.945" endtime="20250702 17:00:59.945"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date_4weeks}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.946" level="INFO">${end_date_4weeks} = 2023-12-30T02:59:59.999Z</msg>
<status status="PASS" starttime="20250702 17:00:59.946" endtime="20250702 17:00:59.946"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date}</var>
<arg>${fecha_pasado_pasado_manana}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.946" level="INFO">${end_date} = 2025-07-05T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.946" endtime="20250702 17:00:59.946"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.947" level="INFO">${end_date} = 2025-07-05T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.947" endtime="20250702 17:00:59.947"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date_tomorrow}</var>
<arg>${fecha_manana}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.947" level="INFO">${end_date_tomorrow} = 2025-07-03T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.947" endtime="20250702 17:00:59.947"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date_tomorrow}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.949" level="INFO">${end_date_tomorrow} = 2025-07-03T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.949" endtime="20250702 17:00:59.949"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date_pastTomorrow}</var>
<arg>${fecha_pasado_manana}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.950" level="INFO">${end_date_pastTomorrow} = 2025-07-04T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.949" endtime="20250702 17:00:59.950"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date_pastTomorrow}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.950" level="INFO">${end_date_pastTomorrow} = 2025-07-04T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.950" endtime="20250702 17:00:59.950"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${schedule_day}</var>
<arg>${dia_actual_lower}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.951" level="INFO">${schedule_day} = wed</msg>
<status status="PASS" starttime="20250702 17:00:59.951" endtime="20250702 17:00:59.951"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${schedule_day}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.951" level="INFO">${schedule_day} = wed</msg>
<status status="PASS" starttime="20250702 17:00:59.951" endtime="20250702 17:00:59.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${start_date_today}</var>
<arg>${fecha_hoy}T03:00:00.000Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.952" level="INFO">${start_date_today} = 2025-07-02T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.952" endtime="20250702 17:00:59.952"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${start_date_today}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.953" level="INFO">${start_date_today} = 2025-07-02T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.952" endtime="20250702 17:00:59.953"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${today_date}</var>
<arg>${fecha_hoy}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.953" level="INFO">${today_date} = 2025-07-02</msg>
<status status="PASS" starttime="20250702 17:00:59.953" endtime="20250702 17:00:59.953"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${today_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.954" level="INFO">${today_date} = 2025-07-02</msg>
<status status="PASS" starttime="20250702 17:00:59.954" endtime="20250702 17:00:59.954"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${end_date_tomorrow2}</var>
<arg>${fecha_manana}T02:59:59.999Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.955" level="INFO">${end_date_tomorrow2} = 2025-07-03T02:59:59.999Z</msg>
<status status="PASS" starttime="20250702 17:00:59.954" endtime="20250702 17:00:59.955"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${end_date_tomorrow}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.955" level="INFO">${end_date_tomorrow} = 2025-07-03T03:00:00.000Z</msg>
<status status="PASS" starttime="20250702 17:00:59.955" endtime="20250702 17:00:59.955"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expiration_date_qr}</var>
<arg>${fecha_manana}T14:10:37.968Z</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:00:59.956" level="INFO">${expiration_date_qr} = 2025-07-03T14:10:37.968Z</msg>
<status status="PASS" starttime="20250702 17:00:59.956" endtime="20250702 17:00:59.956"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${expiration_date_qr}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.956" level="INFO">${expiration_date_qr} = 2025-07-03T14:10:37.968Z</msg>
<status status="PASS" starttime="20250702 17:00:59.956" endtime="20250702 17:00:59.957"/>
</kw>
<status status="PASS" starttime="20250702 17:00:59.918" endtime="20250702 17:00:59.957"/>
</test>
<test id="s1-t2" name="2 hours local" line="66">
<kw name="Get Current Date" library="DateTime">
<var>${date}</var>
<arg>time_zone=local</arg>
<arg>exclude_millis=yes</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250702 17:00:59.958" level="INFO">${date} = 2025-07-02 17:01:00</msg>
<status status="PASS" starttime="20250702 17:00:59.958" endtime="20250702 17:00:59.958"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${formatted_date}</var>
<arg>${date}</arg>
<arg>result_format=%H:%M:%S</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250702 17:00:59.959" level="INFO">${formatted_date} = 17:01:00</msg>
<status status="PASS" starttime="20250702 17:00:59.958" endtime="20250702 17:00:59.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Hora Actual: ${formatted_date}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:00:59.959" level="INFO">Hora Actual: 17:01:00</msg>
<status status="PASS" starttime="20250702 17:00:59.959" endtime="20250702 17:00:59.959"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${one_hour_later}</var>
<arg>${date}</arg>
<arg>1 hour</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250702 17:00:59.960" level="INFO">${one_hour_later} = 2025-07-02 18:01:00.000</msg>
<status status="PASS" starttime="20250702 17:00:59.960" endtime="20250702 17:00:59.960"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${formatted_one_hour_later}</var>
<arg>${one_hour_later}</arg>
<arg>result_format=%H:%M</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250702 17:00:59.961" level="INFO">${formatted_one_hour_later} = 18:01</msg>
<status status="PASS" starttime="20250702 17:00:59.960" endtime="20250702 17:00:59.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Hora Actual + 1 hora: ${formatted_one_hour_later}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:00:59.961" level="INFO">Hora Actual + 1 hora: 18:01</msg>
<status status="PASS" starttime="20250702 17:00:59.961" endtime="20250702 17:00:59.961"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${formatted_one_hour_later}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:00:59.963" level="INFO">${formatted_one_hour_later} = 18:01</msg>
<status status="PASS" starttime="20250702 17:00:59.963" endtime="20250702 17:00:59.963"/>
</kw>
<status status="PASS" starttime="20250702 17:00:59.958" endtime="20250702 17:00:59.963"/>
</test>
<test id="s1-t3" name="Create new service in the selected route" line="77">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250702 17:00:59.965" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250702 17:00:59.964" endtime="20250702 17:00:59.965"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json; charset=utf-8</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:00:59.966" level="INFO">${headers} = {'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14', 'Content-Type': 'application/json; charset=...</msg>
<status status="PASS" starttime="20250702 17:00:59.965" endtime="20250702 17:00:59.966"/>
</kw>
<kw name="PUT On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=https://stage.allrideapp.com/api/v1/admin/pb/routes/67f7e2fe52999601de99bca2?community=6654ae4eba54fe502d4e4187</arg>
<arg>data={"_id":"67f7e2fe52999601de99bca2","trail":{"enabled":false,"adjustByRounds":false},"rounds":{"enabled":false,"anchorStops":[]},"notifyUsersByStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]}},"excludePassengers":{"active":false,"excludeType":"dontHide"},"scheduling":{"enabled":true,"limitUnit":"minutes","limitAmount":30,"lateNotification":{"enabled":false,"amount":0,"unit":"minutes"},"stopNotification":{"enabled":false,"amount":0,"unit":"minutes"},"startLimit":{"upperLimit":{"amount":60,"unit":"minutes"},"lowerLimit":{"amount":30,"unit":"minutes"}},"defaultServiceCost":null,"schedule":[{"enabled":true,"day":"${schedule_day}","time":"${formatted_one_hour_later}","estimatedArrival":null,"capped":{"enabled":false,"capacity":0,"by":"vehicle"},"vehicleCategoryId":null,"restrictPassengers":{"enabled":false,"visibility":{"enabled":false,"excludes":false,"parameters":[]},"reservation":{"enabled":false,"excludes":false,"parameters":[]},"validation":{"enabled":false,"excludes":false,"parameters":[]}},"serviceCost":0,"observations":"","reservations":{"enabled":false,"list":[]},"stopSchedule":[],"defaultResources":[],"_ogIndex":0}],"stopOnReservation":false,"restrictions":{"customParams":{"enabled":false,"params":[]}},"reservations":{"enabled":false,"list":[]},"serviceCreationLimit":{"enabled":false,"date":null}},"rating":{"enabled":false,"withValidation":false},"endDepartureNotice":{"enabled":false,"lastStop":null},"restrictPassengers":{"enabled":false,"allowed":["67f7e2fe52999601de99bca2"],"visibility":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"reservation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"validation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"}},"snapshots":{"enabled":false},"validationParams":{"enabled":false,"driverParams":[],"passengerParams":[]},"canResume":{"timeLimit":{"enabled":false,"amount":5,"unit":"minutes"},"enabled":false},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"validateDeparture":{"enabled":true},"minimumConfirmationTime":{"enabled":false,"amount":1,"unit":"hours"},"minimumTimeToForceDeparture":{"enabled":false,"amount":5,"unit":"minutes"},"endServiceLegAutomatically":{"enabled":false,"stopId":null,"distance":100,"timer":{"amount":5,"unit":"minutes"}},"DNIValidation":{"enabled":false,"options":["qr"]},"validation":{"external":[]},"assistantIds":["66ccdf58193998eca49014c3"],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["6654ae4eba54fe502d4e4187"],"active":true,"visible":true,"internal":false,"anchorStops":[],"isStatic":false,"labels":[],"hasExternalGPS":false,"hasCapacity":true,"hasBeacons":true,"hasRounds":false,"hasBoardingCount":false,"hasUnboardingCount":false,"usesBusCode":false,"usesVehicleList":true,"dynamicSeatAssignment":false,"usesDriverCode":false,"usesDriverPin":false,"usesTickets":true,"usesPasses":false,"usesTextToSpeech":false,"allowsManualValidation":true,"allowsRating":true,"allowsOnlyExistingDrivers":false,"allowsMultipleDrivers":false,"allowsDebugging":false,"startsOnStop":false,"notNearStop":false,"allowsNonServiceSnapshots":false,"allowsServiceSnapshots":false,"allowsDistance":true,"usesOfflineCount":false,"hasBoardings":true,"hasUnboardings":true,"usesManualSeat":true,"noPassengerInfo":false,"showParable":false,"showStops":true,"allowGenericVehicles":true,"usesVehicleQRLink":false,"skipDeclaration":false,"skipQRValidation":false,"assistantAssignsSeat":true,"hasBarrier":false,"name":"Cancel reservation","shapeId":"6654d514713b9a5184cfe21e","description":"Cancel reservation","extraInfo":"","color":"652525","legOptions":[{"legType":"service","preTripChecklist":{"enabled":false,"params":[]},"customParamsAtStart":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"startConditions":{"location":{"enabled":false,"type":"near","stopIds":[]},"schedule":{"enabled":false,"amount":0,"unit":"minutes"}},"moveToNextLegAutomatically":{"enabled":false,"stopId":null,"distance":100}}],"ownerIds":[{"_id":"66954794b24db9885e5aed83","id":"6654ae4eba54fe502d4e4187","role":"community"}],"segments":[],"communityId":"6654ae4eba54fe502d4e4187","timeOnRoute":13,"distance":9,"distanceInMeters":8521,"createdAt":"2025-04-10T15:25:50.512Z","updatedAt":"2025-04-22T16:06:39.555Z","__v":55,"superCommunityId":"653fd68233d83952fafcd4be","routeCost":10,"ticketCost":100,"externalInfo":{"uuid":""},"customParams":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"roundOrder":[],"useServiceReservations":false,"autoStartConditions":{"enabled":false,"ignition":false,"acceptedStatus":false,"delay":{"enabled":false,"time":0,"unit":"minutes"},"nearRoute":{"enabled":false,"distance":0}},"notifyUnboardedPassengers":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]},"sendAt":"eachStop"},"notifyPassengersWithoutReservation":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]},"sendAt":"eachStop"},"notifySkippedStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]}},"routeDeviation":{"maxDistance":100,"maxTime":5,"enabled":false},"codeValidationOptions":{"enabled":false,"type":"qr","failureMessage":"Solo puedes presentar el código de AllRide o de tu cédula de identidad."},"custom":{"ui":{"color":"563f3f","marker":{"1x":"","1.5x":"","2x":"","3x":"","4x":""}}}}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<msg timestamp="20250702 17:01:00.591" level="INFO">PUT Request : url=https://stage.allrideapp.com/api/v1/admin/pb/routes/67f7e2fe52999601de99bca2?community=6654ae4eba54fe502d4e4187 
 path_url=/api/v1/admin/pb/routes/67f7e2fe52999601de99bca2?community=6654ae4eba54fe502d4e4187 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '5569'} 
 body={"_id":"67f7e2fe52999601de99bca2","trail":{"enabled":false,"adjustByRounds":false},"rounds":{"enabled":false,"anchorStops":[]},"notifyUsersByStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]}},"excludePassengers":{"active":false,"excludeType":"dontHide"},"scheduling":{"enabled":true,"limitUnit":"minutes","limitAmount":30,"lateNotification":{"enabled":false,"amount":0,"unit":"minutes"},"stopNotification":{"enabled":false,"amount":0,"unit":"minutes"},"startLimit":{"upperLimit":{"amount":60,"unit":"minutes"},"lowerLimit":{"amount":30,"unit":"minutes"}},"defaultServiceCost":null,"schedule":[{"enabled":true,"day":"wed","time":"18:01","estimatedArrival":null,"capped":{"enabled":false,"capacity":0,"by":"vehicle"},"vehicleCategoryId":null,"restrictPassengers":{"enabled":false,"visibility":{"enabled":false,"excludes":false,"parameters":[]},"reservation":{"enabled":false,"excludes":false,"parameters":[]},"validation":{"enabled":false,"excludes":false,"parameters":[]}},"serviceCost":0,"observations":"","reservations":{"enabled":false,"list":[]},"stopSchedule":[],"defaultResources":[],"_ogIndex":0}],"stopOnReservation":false,"restrictions":{"customParams":{"enabled":false,"params":[]}},"reservations":{"enabled":false,"list":[]},"serviceCreationLimit":{"enabled":false,"date":null}},"rating":{"enabled":false,"withValidation":false},"endDepartureNotice":{"enabled":false,"lastStop":null},"restrictPassengers":{"enabled":false,"allowed":["67f7e2fe52999601de99bca2"],"visibility":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"reservation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"validation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"}},"snapshots":{"enabled":false},"validationParams":{"enabled":false,"driverParams":[],"passengerParams":[]},"canResume":{"timeLimit":{"enabled":false,"amount":5,"unit":"minutes"},"enabled":false},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"validateDeparture":{"enabled":true},"minimumConfirmationTime":{"enabled":false,"amount":1,"unit":"hours"},"minimumTimeToForceDeparture":{"enabled":false,"amount":5,"unit":"minutes"},"endServiceLegAutomatically":{"enabled":false,"stopId":null,"distance":100,"timer":{"amount":5,"unit":"minutes"}},"DNIValidation":{"enabled":false,"options":["qr"]},"validation":{"external":[]},"assistantIds":["66ccdf58193998eca49014c3"],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["6654ae4eba54fe502d4e4187"],"active":true,"visible":true,"internal":false,"anchorStops":[],"isStatic":false,"labels":[],"hasExternalGPS":false,"hasCapacity":true,"hasBeacons":true,"hasRounds":false,"hasBoardingCount":false,"hasUnboardingCount":false,"usesBusCode":false,"usesVehicleList":true,"dynamicSeatAssignment":false,"usesDriverCode":false,"usesDriverPin":false,"usesTickets":true,"usesPasses":false,"usesTextToSpeech":false,"allowsManualValidation":true,"allowsRating":true,"allowsOnlyExistingDrivers":false,"allowsMultipleDrivers":false,"allowsDebugging":false,"startsOnStop":false,"notNearStop":false,"allowsNonServiceSnapshots":false,"allowsServiceSnapshots":false,"allowsDistance":true,"usesOfflineCount":false,"hasBoardings":true,"hasUnboardings":true,"usesManualSeat":true,"noPassengerInfo":false,"showParable":false,"showStops":true,"allowGenericVehicles":true,"usesVehicleQRLink":false,"skipDeclaration":false,"skipQRValidation":false,"assistantAssignsSeat":true,"hasBarrier":false,"name":"Cancel reservation","shapeId":"6654d514713b9a5184cfe21e","description":"Cancel reservation","extraInfo":"","color":"652525","legOptions":[{"legType":"service","preTripChecklist":{"enabled":false,"params":[]},"customParamsAtStart":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"startConditions":{"location":{"enabled":false,"type":"near","stopIds":[]},"schedule":{"enabled":false,"amount":0,"unit":"minutes"}},"moveToNextLegAutomatically":{"enabled":false,"stopId":null,"distance":100}}],"ownerIds":[{"_id":"66954794b24db9885e5aed83","id":"6654ae4eba54fe502d4e4187","role":"community"}],"segments":[],"communityId":"6654ae4eba54fe502d4e4187","timeOnRoute":13,"distance":9,"distanceInMeters":8521,"createdAt":"2025-04-10T15:25:50.512Z","updatedAt":"2025-04-22T16:06:39.555Z","__v":55,"superCommunityId":"653fd68233d83952fafcd4be","routeCost":10,"ticketCost":100,"externalInfo":{"uuid":""},"customParams":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"roundOrder":[],"useServiceReservations":false,"autoStartConditions":{"enabled":false,"ignition":false,"acceptedStatus":false,"delay":{"enabled":false,"time":0,"unit":"minutes"},"nearRoute":{"enabled":false,"distance":0}},"notifyUnboardedPassengers":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]},"sendAt":"eachStop"},"notifyPassengersWithoutReservation":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]},"sendAt":"eachStop"},"notifySkippedStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roles":[],"roleIds":[]}},"routeDeviation":{"maxDistance":100,"maxTime":5,"enabled":false},"codeValidationOptions":{"enabled":false,"type":"qr","failureMessage":"Solo puedes presentar el código de AllRide o de tu cédula de identidad."},"custom":{"ui":{"color":"563f3f","marker":{"1x":"","1.5x":"","2x":"","3x":"","4x":""}}}} 
 </msg>
<msg timestamp="20250702 17:01:00.591" level="INFO">PUT Response : url=https://stage.allrideapp.com/api/v1/admin/pb/routes/67f7e2fe52999601de99bca2?community=6654ae4eba54fe502d4e4187 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:02 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1751490123', 'ETag': 'W/"16d0-EsnvLRPlzdYLiIHmLAK7uCKVUD4"', 'Content-Encoding': 'gzip'} 
 body={"custom":{"ui":{"color":"563f3f","marker":{"1":{"5x":""},"1x":"","2x":"","3x":"","4x":""}}},"trail":{"enabled":false,"adjustByRounds":false},"rounds":{"enabled":false,"anchorStops":[]},"notifyUsersByStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roleIds":[]}},"notifyUnboardedPassengers":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roleIds":[]},"sendAt":"eachStop"},"notifyPassengersWithoutReservation":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roleIds":[]},"sendAt":"eachStop"},"notifySkippedStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roleIds":[]}},"excludePassengers":{"active":false,"excludeType":"dontHide"},"scheduling":{"enabled":true,"schedule":[{"capped":{"enabled":false,"capacity":0,"by":"vehicle"},"restrictPassengers":{"validation":{"enabled":false,"conditional":"or","excludes":false,"parameters":[],"parameter":[]},"reservation":{"enabled":false,"conditional":"or","excludes":false,"parameters":[],"parameter":[]},"visibility":{"enabled":false,"conditional":"or","excludes":false,"parameters":[],"parameter":[]},"enabled":false},"reservations":{"enabled":false,"list":[]},"enabled":true,"_id":"68659e0e1663e447eea02f05","day":"wed","time":"18:01","estimatedArrival":null,"vehicleCategoryId":null,"serviceCost":0,"observations":"","stopSchedule":[],"defaultResources":[]}],"defaultServiceCost":null,"lateNotification":{"enabled":false,"amount":0,"unit":"minutes"},"stopNotification":{"enabled":false,"amount":0,"unit":"minutes"},"limitUnit":"minutes","limitAmount":30,"startLimit":{"upperLimit":{"amount":60,"unit":"minutes"},"lowerLimit":{"amount":30,"unit":"minutes"}},"restrictions":{"customParams":{"enabled":false,"params":[]},"byQuantity":{"unit":"days","userSkip":[]},"timeRules":{"booking":{"windowsTime":[]}},"_id":"68659e0e1663e447eea02f06"},"stopOnReservation":false,"serviceCreationLimit":{"enabled":false,"date":null}},"rating":{"enabled":false,"withValidation":false},"endDepartureNotice":{"enabled":false,"lastStop":null},"restrictPassengers":{"enabled":false,"visibility":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"reservation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"validation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"}},"snapshots":{"enabled":false},"validationParams":{"driverParams":[],"passengerParams":[]},"canResume":{"timeLimit":{"enabled":false,"amount":5,"unit":"minutes"},"enabled":false},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"validateDeparture":{"enabled":true},"minimumConfirmationTime":{"enabled":false,"amount":1,"unit":"hours"},"minimumTimeToForceDeparture":{"enabled":false,"amount":5,"unit":"minutes"},"externalInfo":{"uuid":""},"endServiceLegAutomatically":{"enabled":false,"stopId":null,"distance":100,"timer":{"amount":5,"unit":"minutes"}},"autoStartConditions":{"enabled":false,"ignition":false,"acceptedStatus":false,"delay":{"enabled":false,"time":0,"unit":"minutes"},"nearRoute":{"enabled":false,"distance":0}},"codeValidationOptions":{"enabled":false,"type":"qr","failureMessage":"Solo puedes presentar el código de AllRide o de tu cédula de identidad."},"DNIValidation":{"enabled":false,"options":["qr"]},"routeDeviation":{"maxDistance":100,"maxTime":5,"enabled":false},"validation":{"external":[]},"restrictions":{"external":[]},"assistantIds":["66ccdf58193998eca49014c3"],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["6654ae4eba54fe502d4e4187"],"active":true,"visible":true,"internal":false,"anchorStops":[],"isStatic":false,"labels":[],"hasExternalGPS":false,"hasCapacity":true,"hasBeacons":true,"hasRounds":false,"hasBoardingCount":false,"hasUnboardingCount":false,"usesBusCode":false,"usesVehicleList":true,"dynamicSeatAssignment":false,"usesDriverCode":false,"usesDriverPin":false,"usesTickets":true,"usesPasses":false,"usesTextToSpeech":false,"allowsManualValidation":true,"allowsRating":true,"allowsOnlyExistingDrivers":false,"allowsMultipleDrivers":false,"allowsDebugging":false,"startsOnStop":false,"notNearStop":false,"allowsNonServiceSnapshots":false,"allowsServiceSnapshots":false,"allowsDistance":true,"usesOfflineCount":false,"hasBoardings":true,"hasUnboardings":true,"usesManualSeat":true,"noPassengerInfo":false,"showParable":false,"showStops":true,"allowGenericVehicles":true,"usesVehicleQRLink":false,"skipDeclaration":false,"skipQRValidation":false,"assistantAssignsSeat":true,"hasBarrier":false,"_id":"67f7e2fe52999601de99bca2","name":"Cancel reservation","shapeId":"6654d514713b9a5184cfe21e","description":"Cancel reservation","extraInfo":"","color":"652525","legOptions":[{"startConditions":{"location":{"stopIds":[],"enabled":false,"type":"near"},"schedule":{"enabled":false,"amount":0,"unit":"minutes"}},"moveToNextLegAutomatically":{"distance":100,"enabled":false,"stopId":null},"ETA":{"notify":{"sendTo":{"emails":[],"adminLevels":[],"roleIds":[]}},"visibility":[]},"providers":[],"_id":"68659e0e1663e447eea02f02","legType":"service","preTripChecklist":{"enabled":false,"params":[]},"customParamsAtStart":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]}}],"ownerIds":[{"_id":"66954794b24db9885e5aed83","id":"6654ae4eba54fe502d4e4187","role":"community"}],"segments":[],"communityId":"6654ae4eba54fe502d4e4187","timeOnRoute":13,"distance":9,"distanceInMeters":8521,"createdAt":"2025-04-10T15:25:50.512Z","updatedAt":"2025-07-02T21:01:02.534Z","__v":249,"superCommunityId":"653fd68233d83952fafcd4be","routeCost":10,"ticketCost":100,"customParams":{"enabled":false,"params":[]},"customParamsAtTheEnd":{"enabled":false,"params":[]},"roundOrder":[],"useServiceReservations":false} 
 </msg>
<msg timestamp="20250702 17:01:00.592" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:00:59.966" endtime="20250702 17:01:00.592"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250702 17:01:00.592" endtime="20250702 17:01:00.593"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${scheduleId}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:00.594" level="INFO">${scheduleId} = 67f7e2fe52999601de99bca2</msg>
<status status="PASS" starttime="20250702 17:01:00.593" endtime="20250702 17:01:00.595"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${scheduleId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:01:00.596" level="INFO">${scheduleId} = 67f7e2fe52999601de99bca2</msg>
<status status="PASS" starttime="20250702 17:01:00.595" endtime="20250702 17:01:00.596"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250702 17:01:05.597" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20250702 17:01:00.596" endtime="20250702 17:01:05.597"/>
</kw>
<status status="PASS" starttime="20250702 17:00:59.964" endtime="20250702 17:01:05.597"/>
</test>
<test id="s1-t4" name="Create services" line="98">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250702 17:01:05.601" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250702 17:01:05.601" endtime="20250702 17:01:05.602"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json; charset=utf-8</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:01:05.602" level="INFO">${headers} = {'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14', 'Content-Type': 'application/json; charset=...</msg>
<status status="PASS" starttime="20250702 17:01:05.602" endtime="20250702 17:01:05.602"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=https://stage.allrideapp.com/api/v1/admin/pb/createServices/6654ae4eba54fe502d4e4187?community=6654ae4eba54fe502d4e4187</arg>
<arg>data={}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250702 17:01:21.933" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/admin/pb/createServices/6654ae4eba54fe502d4e4187?community=6654ae4eba54fe502d4e4187 
 path_url=/api/v1/admin/pb/createServices/6654ae4eba54fe502d4e4187?community=6654ae4eba54fe502d4e4187 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '2'} 
 body={} 
 </msg>
<msg timestamp="20250702 17:01:21.933" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/admin/pb/createServices/6654ae4eba54fe502d4e4187?community=6654ae4eba54fe502d4e4187 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:23 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '0', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1751490129'} 
 body=None 
 </msg>
<msg timestamp="20250702 17:01:21.935" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:01:05.604" endtime="20250702 17:01:21.935"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250702 17:01:21.941" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250702 17:01:21.938" endtime="20250702 17:01:21.942"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" starttime="20250702 17:01:21.944" endtime="20250702 17:01:21.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:01:21.948" level="INFO">200</msg>
<status status="PASS" starttime="20250702 17:01:21.947" endtime="20250702 17:01:21.948"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250702 17:01:23.950" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20250702 17:01:21.949" endtime="20250702 17:01:23.950"/>
</kw>
<status status="PASS" starttime="20250702 17:01:05.600" endtime="20250702 17:01:23.951"/>
</test>
<test id="s1-t5" name="Get Service Id" line="117">
<kw name="Set Variable" library="BuiltIn">
<var>${url}</var>
<arg>${STAGE_URL}/api/v1/admin/pb/allServices?community=${idComunidad2}&amp;startDate=${start_date_today}&amp;endDate=${end_date_pastTomorrow}&amp;onlyODDs=false</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:23.960" level="INFO">${url} = https://stage.allrideapp.com/api/v1/admin/pb/allServices?community=6654ae4eba54fe502d4e4187&amp;startDate=2025-07-02T03:00:00.000Z&amp;endDate=2025-07-04T03:00:00.000Z&amp;onlyODDs=false</msg>
<status status="PASS" starttime="20250702 17:01:23.959" endtime="20250702 17:01:23.960"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:01:23.962" level="INFO">${headers} = {'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14'}</msg>
<status status="PASS" starttime="20250702 17:01:23.961" endtime="20250702 17:01:23.962"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20250702 17:01:24.975" level="INFO">GET Request : url=https://stage.allrideapp.com/api/v1/admin/pb/allServices?community=6654ae4eba54fe502d4e4187&amp;startDate=2025-07-02T03:00:00.000Z&amp;endDate=2025-07-04T03:00:00.000Z&amp;onlyODDs=false 
 path_url=/api/v1/admin/pb/allServices?community=6654ae4eba54fe502d4e4187&amp;startDate=2025-07-02T03:00:00.000Z&amp;endDate=2025-07-04T03:00:00.000Z&amp;onlyODDs=false 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14'} 
 body=None 
 </msg>
<msg timestamp="20250702 17:01:24.975" level="INFO">GET Response : url=https://stage.allrideapp.com/api/v1/admin/pb/allServices?community=6654ae4eba54fe502d4e4187&amp;startDate=2025-07-02T03:00:00.000Z&amp;endDate=2025-07-04T03:00:00.000Z&amp;onlyODDs=false 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:26 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1751490147', 'ETag': 'W/"67793-+roK402FCh+64aCGpfrGo3pgngk"', 'Content-Encoding': 'gzip'} 
 body={"regularDepartures":[{"_id":"684704dd0bf367e2b2aea1bc","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"6654ae4eba54fe502d4e4187","name":"Comunidad Automatización 2","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_6654ae4eba54fe502d4e4187_1717603083265.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"state":"canceled","routeId":{"_id":"67cf0d5556535c5b75d43a2a","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"AutoStart2","shapeId":{"_id":"67cf0d5456535c5b75d43a0b","distanceInMeters":5107},"description":"AutoStart2","destinationStop":{"_id":"67506a5fc46fdbfcb4fa01ff","name":"Alto Las Condes. Avenida Presidente Kennedy Lateral, Las Condes, Chile"},"originStop":{"_id":"67506a5fc46fdbfcb4fa0202","name":"Mall Apumanque Avenida Manquehue Sur, Las Condes, Chile"},"useServiceReservations":false},"serviceId":"684704dd0bf367e2b2aea1bb","serviceDate":"2025-07-02T15:18:00.000Z","observations":"","vehicleId":{"_id":"67b5f76fb5c11f24f63fe29d","plate":"GPS DEVICE","code":"Codigo1"},"driverId":{"_id":"668309b8bb41bfd79a461dc3","code":"159159","name":"Conductor Super Comunidad"},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"estimatedArrival":null,"serviceCost":null,"startedAt":"2025-07-02T15:18:00.819Z","endedAt":"2025-07-02T17:20:49.411Z"},{"_id":"684704dd0bf367e2b2aea1f2","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"6654ae4eba54fe502d4e4187","name":"Comunidad Automatización 2","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_6654ae4eba54fe502d4e4187_1717603083265.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"state":"canceled","routeId":{"_id":"67cf0d5556535c5b75d43a2a","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"AutoStart2","shapeId":{"_id":"67cf0d5456535c5b75d43a0b","distanceInMeters":5107},"description":"AutoStart2","destinationStop":{"_id":"67506a5fc46fdbfcb4fa01ff","name":"Alto Las Condes. Avenida Presidente Kennedy Lateral, Las Condes, Chile"},"originStop":{"_id":"67506a5fc46fdbfcb4fa0202","name":"Mall Apumanque Avenida Manquehue Sur, Las Condes, Chile"},"useServiceReservations":false},"serviceId":"684704dd0bf367e2b2aea1f1","serviceDate":"2025-07-02T15:22:00.000Z","observations":"","vehicleId":{"_id":"67b5f76fb5c11f24f63fe29d","plate":"GPS DEVICE","code":"Codigo1"},"driverId":{"_id":"668309b8bb41bfd79a461dc3","code":"159159","name":"Conductor Super Comunidad"},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"startedAt":"2025-07-02T15:22:00.816Z","endedAt":"2025-07-02T17:20:51.400Z"},{"_id":"684704dd0bf367e2b2aea231","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"6654ae4eba54fe502d4e4187","name":"Comunidad Automatización 2","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_6654ae4eba54fe502d4e4187_1717603083265.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"state":"canceled","routeId":{"_id":"67cf0d5556535c5b75d43a2a","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"AutoStart2","shapeId":{"_id":"67cf0d5456535c5b75d43a0b","distanceInMeters":5107},"description":"AutoStart2","destinationStop":{"_id":"67506a5fc46fdbfcb4fa01ff","name":"Alto Las Condes. Avenida Presidente Kennedy Lateral, Las Condes, Chile"},"originStop":{"_id":"67506a5fc46fdbfcb4fa0202","name":"Mall Apumanque Avenida Manquehue Sur, Las Condes, Chile"},"useServiceReservations":false},"serviceId":"684704dd0bf367e2b2aea230","serviceDate":"2025-07-02T15:39:00.000Z","observations":"","vehicleId":{"_id":"67b5f76fb5c11f24f63fe29d","plate":"GPS DEVICE","code":"Codigo1"},"driverId":{"_id":"668309b8bb41bfd79a461dc3","code":"159159","name":"Conductor Super Comunidad"},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"estimatedArrival":null,"serviceCost":null,"startedAt":"2025-07-02T15:39:00.816Z","endedAt":"2025-07-02T17:20:52.848Z"},{"_id":"684704dd0bf367e2b2aea270","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"6654ae4eba54fe502d4e4187","name":"Comunidad Automatización 2","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_6654ae4eba54fe502d4e4187_1717603083265.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"state":"canceled","routeId":{"_id":"67cf0d5556535c5b75d43a2a","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"AutoStart2","shapeId":{"_id":"67cf0d5456535c5b75d43a0b","distanceInMeters":5107},"description":"AutoStart2","destinationStop":{"_id":"67506a5fc46fdbfcb4fa01ff","name":"Alto Las Condes. Avenida Presidente Kennedy Lateral, Las Condes, Chile"},"originStop":{"_id":"67506a5fc46fdbfcb4fa0202","name":"Mall Apumanque Avenida Manquehue Sur, Las Condes, Chile"},"useServiceReservations":false},"serviceId":"684704dd0bf367e2b2aea26f","serviceDate":"2025-07-02T15:55:00.000Z","observations":"","vehicleId":{"_id":"67b5f76fb5c11f24f63fe29d","plate":"GPS DEVICE","code":"Codigo1"},"driverId":{"_id":"668309b8bb41bfd79a461dc3","code":"159159","name":"Conductor Super Comunidad"},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"estimatedArrival":null,"serviceCost":null,"startedAt":"2025-07-02T15:55:00.955Z","endedAt":"2025-07-02T17:20:54.574Z"},{"_id":"684704dd0bf367e2b2aea2af","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"6654ae4eba54fe502d4e4187","name":"Comunidad Automatización 2","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_6654ae4eba54fe502d4e4187_1717603083265.png"}],"active":false,"disabled":false,"distance":0,"scheduled":true,"odd":false,"state":"canceled","routeId":{"_id":"67cf0d5556535c5b75d43a2a","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"AutoStart2","shapeId":{"_id":"67cf0d5456535c5b75d43a0b","distanceInMeters":5107},"description":"AutoStart2","destinationStop":{"_id":"67506a5fc46fdbfcb4fa01ff","name":"Alto Las Condes. Avenida Presidente Kennedy Lateral, Las Condes, Chile"},"originStop":{"_id":"67506a5fc46fdbfcb4fa0202","name":"Mall Apumanque Avenida Manquehue Sur, Las Condes, Chile"},"useServiceReservations":false},"serviceId":"684704dd0bf367e2b2aea2ae","serviceDate":"2025-07-02T15:58:00.000Z","observations":"","vehicleId":{"_id":"67b5f76fb5c11f24f63fe29d","plate":"GPS DEVICE","code":"Codigo1"},"driverId":{"_id":"668309b8bb41bfd79a461dc3","code":"159159","name":"Conductor Super Comunidad"},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"estimatedArrival":null,"serviceCost":null,"startedAt":"2025-07-02T15:58:00.812Z","endedAt":"2025-07-02T17:20:56.258Z"},{"_id":"684704dd0bf367e2b2aea2ee","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"6654ae4eba54fe502d4e4187","name":"Comunidad Automatización 2","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_6654ae4eba54fe502d4e4187_1717603083265.png"}],"active":true,"disabled":false,"distance":0,"scheduled":true,"odd":false,"state":"canceled","routeId":{"_id":"67cf0d5556535c5b75d43a2a","scheduling":{"limitUnit":"minutes","limitAmount":30},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"labels":[],"name":"AutoStart2","shapeId":{"_id":"67cf0d5456535c5b75d43a0b","distanceInMeters":5107},"description":"AutoStart2","destinationStop":{"_id":"67506a5fc46fdbfcb4fa01ff","name":"Alto Las Condes. Avenida Presidente Kennedy Lateral, Las Condes, Chile"},"originStop":{"_id":"67506a5fc46fdbfcb4fa0202","name":"Mall Apumanque Avenida Manquehue Sur, Las Condes, Chile"},"useServiceReservations":false},"serviceId":"684704dd0bf367e2b2aea2ed","serviceDate":"2025-07-02T17:24:00.000Z","observations":"","vehicleId":{"_id":"67b5f76fb5c11f24f63fe29d","plate":"GPS DEVICE","code":"Codigo1"},"driverId":{"_id":"668309b8bb41bfd79a461dc3","code":"159159","name":"Conductor Super Comunidad"},"drivers":[],"stateHistory":[],"apportionByCategories":[],"reservations":[],"estimatedArrival":null,"serviceCost":null,"startedAt":"2025-07-02T17:24:00.545Z"},{"_id":"684704dd0bf367e2b2aea32d","superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"6654ae4eba54fe502d4e4187","name":"Comunidad Automatización 2","avatar":"https://s3.amazonaws.... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250702 17:01:24.976" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:01:23.964" endtime="20250702 17:01:24.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${responseJson}</var>
<arg>${response.json()}[scheduledServices]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:24.993" level="INFO">${responseJson} = [{'_id': '684704df0bf367e2b2aea441', 'superCommunities': [{'_id': '653fd68233d83952fafcd4be', 'name': 'SC - Automatización', 'avatar': 'https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_65...</msg>
<status status="PASS" starttime="20250702 17:01:24.977" endtime="20250702 17:01:24.993"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_id}</var>
<arg>None</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:24.995" level="INFO">${service_id} = None</msg>
<status status="PASS" starttime="20250702 17:01:24.994" endtime="20250702 17:01:24.995"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${sorted_services}</var>
<arg>sorted([s for s in ${responseJson} if s['routeId']['_id'] == '${scheduleId}'], key=lambda x: x['createdAt'])</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250702 17:01:25.084" level="INFO">${sorted_services} = [{'_id': '6849c1f66488f6744382eabe', 'superCommunities': [{'_id': '653fd68233d83952fafcd4be', 'name': 'SC - Automatización', 'avatar': 'https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_65...</msg>
<status status="PASS" starttime="20250702 17:01:24.996" endtime="20250702 17:01:25.084"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sorted_services} == []</arg>
<arg>Fatal Error</arg>
<arg>msg= No services were created with routeId._id = "${scheduleId}" All createSheduled Tests Failing(Fatal error)</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250702 17:01:25.086" endtime="20250702 17:01:25.102"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${last_service}</var>
<arg>${sorted_services[-1]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:25.106" level="INFO">${last_service} = {'_id': '68659e226bc6910d71d2525e', 'superCommunities': [{'_id': '653fd68233d83952fafcd4be', 'name': 'SC - Automatización', 'avatar': 'https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653...</msg>
<status status="PASS" starttime="20250702 17:01:25.102" endtime="20250702 17:01:25.107"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${service_id}</var>
<arg>${last_service['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:25.117" level="INFO">${service_id} = 68659e226bc6910d71d2525e</msg>
<status status="PASS" starttime="20250702 17:01:25.111" endtime="20250702 17:01:25.117"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${last_service_route}</var>
<arg>${last_service['routeId']['_id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:25.121" level="INFO">${last_service_route} = 67f7e2fe52999601de99bca2</msg>
<status status="PASS" starttime="20250702 17:01:25.118" endtime="20250702 17:01:25.121"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${scheduleId}</arg>
<arg>${last_service_route}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250702 17:01:25.124" endtime="20250702 17:01:25.126"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${service_id}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:01:25.127" level="INFO">${service_id} = 68659e226bc6910d71d2525e</msg>
<status status="PASS" starttime="20250702 17:01:25.126" endtime="20250702 17:01:25.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Last created service ID: ${service_id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:01:25.130" level="INFO">Last created service ID: 68659e226bc6910d71d2525e</msg>
<status status="PASS" starttime="20250702 17:01:25.130" endtime="20250702 17:01:25.130"/>
</kw>
<status status="PASS" starttime="20250702 17:01:23.956" endtime="20250702 17:01:25.133"/>
</test>
<test id="s1-t6" name="Resource Assignment(Driver and Vehicle)" line="142">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250702 17:01:25.138" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250702 17:01:25.138" endtime="20250702 17:01:25.139"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:01:25.142" level="INFO">${headers} = {'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250702 17:01:25.140" endtime="20250702 17:01:25.143"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url= /api/v1/admin/pb/assignServiceResources/${service_id}?community=${idComunidad2}</arg>
<arg>data=[{"multipleDrivers":false,"driver":{"driverId":"${driverId2}"},"drivers":[],"vehicle":{"vehicleId":"${vehicleId2}","capacity":"5"},"passengers":[],"departure":null}]</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250702 17:01:26.071" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v1/admin/pb/assignServiceResources/68659e226bc6910d71d2525e?community=6654ae4eba54fe502d4e4187 
 path_url=/api/v1/admin/pb/assignServiceResources/68659e226bc6910d71d2525e?community=6654ae4eba54fe502d4e4187 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14', 'Content-Type': 'application/json', 'Content-Length': '188'} 
 body=[{"multipleDrivers":false,"driver":{"driverId":"668309b8bb41bfd79a461dc3"},"drivers":[],"vehicle":{"vehicleId":"66830b98bb41bfd79a4620ac","capacity":"5"},"passengers":[],"departure":null}] 
 </msg>
<msg timestamp="20250702 17:01:26.072" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v1/admin/pb/assignServiceResources/68659e226bc6910d71d2525e?community=6654ae4eba54fe502d4e4187 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1751490148', 'ETag': 'W/"43b-8i+1+WGeVu6abK9V2S5Lk5UVdug"', 'Content-Encoding': 'gzip'} 
 body={"capped":{"enabled":false},"restrictPassengers":{"validation":{"enabled":false,"parameters":[]},"reservation":{"enabled":false,"parameters":[]},"visibility":{"enabled":false,"parameters":[]},"enabled":false},"superCommunities":["653fd68233d83952fafcd4be"],"communities":["6654ae4eba54fe502d4e4187"],"active":true,"hasAssignedResources":true,"blocked":false,"disabled":false,"_id":"68659e226bc6910d71d2525e","routeId":"67f7e2fe52999601de99bca2","serviceDate":"2025-07-02T22:01:00.000Z","observations":"","apportionByCategories":[],"stopSchedule":[],"resources":[{"_id":"68659e286bc6910d71d25321","departure":{"departureId":"68659e276bc6910d71d252eb","capacity":46},"driver":{"driverId":"668309b8bb41bfd79a461dc3"},"drivers":[],"vehicle":{"vehicleId":"66830b98bb41bfd79a4620ac","capacity":46},"assignedAt":"2025-07-02T21:01:28.036Z"}],"reservations":[],"stateHistory":[],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"6654ae4eba54fe502d4e4187","createdAt":"2025-07-02T21:01:22.065Z","updatedAt":"2025-07-02T21:01:28.039Z","__v":1,"assignedAt":"2025-07-02T21:01:27.678Z"} 
 </msg>
<msg timestamp="20250702 17:01:26.072" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:01:25.145" endtime="20250702 17:01:26.072"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250702 17:01:26.075" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250702 17:01:26.073" endtime="20250702 17:01:26.076"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" starttime="20250702 17:01:26.077" endtime="20250702 17:01:26.079"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${departureId}</var>
<arg>${response.json()}[resources][0][departure][departureId]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:26.083" level="INFO">${departureId} = 68659e276bc6910d71d252eb</msg>
<status status="PASS" starttime="20250702 17:01:26.080" endtime="20250702 17:01:26.083"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${departureId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:01:26.085" level="INFO">${departureId} = 68659e276bc6910d71d252eb</msg>
<status status="PASS" starttime="20250702 17:01:26.084" endtime="20250702 17:01:26.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:01:26.088" level="INFO">200</msg>
<status status="PASS" starttime="20250702 17:01:26.087" endtime="20250702 17:01:26.089"/>
</kw>
<status status="PASS" starttime="20250702 17:01:25.137" endtime="20250702 17:01:26.090"/>
</test>
<test id="s1-t7" name="Get Departure Info After Resource Assignment" line="162">
<kw name="Set Variable" library="BuiltIn">
<var>${url}</var>
<arg>https://stage.allrideapp.com/api/v1/admin/pb/departures/${departureId}?community=6654ae4eba54fe502d4e4187</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:26.094" level="INFO">${url} = https://stage.allrideapp.com/api/v1/admin/pb/departures/68659e276bc6910d71d252eb?community=6654ae4eba54fe502d4e4187</msg>
<status status="PASS" starttime="20250702 17:01:26.094" endtime="20250702 17:01:26.094"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:01:26.096" level="INFO">&amp;{headers} = { Authorization=Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14 }</msg>
<status status="PASS" starttime="20250702 17:01:26.095" endtime="20250702 17:01:26.096"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20250702 17:01:26.683" level="INFO">GET Request : url=https://stage.allrideapp.com/api/v1/admin/pb/departures/68659e276bc6910d71d252eb?community=6654ae4eba54fe502d4e4187 
 path_url=/api/v1/admin/pb/departures/68659e276bc6910d71d252eb?community=6654ae4eba54fe502d4e4187 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14'} 
 body=None 
 </msg>
<msg timestamp="20250702 17:01:26.684" level="INFO">GET Response : url=https://stage.allrideapp.com/api/v1/admin/pb/departures/68659e276bc6910d71d252eb?community=6654ae4eba54fe502d4e4187 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:28 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1751490149', 'ETag': 'W/"ce0f-IDu9qlsfOTmxCGvItUKaBSDuLdE"', 'Content-Encoding': 'gzip'} 
 body={"_id":"68659e276bc6910d71d252eb","restrictPassengers":{"validation":{"enabled":false,"parameters":[]},"reservation":{"enabled":false,"parameters":[]},"visibility":{"enabled":false,"parameters":[]},"enabled":false},"superCommunities":[{"_id":"653fd68233d83952fafcd4be","name":"SC - Automatización","avatar":"https://s3.amazonaws.com/allride.uploads/superCommunityAvatar_653fd601f90509541a748683_1699885179092.png"}],"communities":[{"_id":"6654ae4eba54fe502d4e4187","name":"Comunidad Automatización 2","avatar":"https://s3.amazonaws.com/allride.uploads/communityAvatar_6654ae4eba54fe502d4e4187_1717603083265.png"}],"assistantIds":["66ccdf58193998eca49014c3"],"labels":[],"active":false,"sharing":true,"disabled":false,"internal":false,"rounds":0,"distance":0,"scheduled":true,"odd":false,"estimatedDistance":0,"extraMinutes":0,"placeWaitTime":0,"hasExternalGPS":false,"allowsServiceSnapshots":false,"allowsNonServiceSnapshots":false,"allowsSnapshots":false,"allowsDistance":false,"usesOfflineCount":false,"linkedDepartures":[],"communityId":"6654ae4eba54fe502d4e4187","driverId":{"_id":"668309b8bb41bfd79a461dc3","config":{"autoLogout":{"enabled":false,"timer":{"amount":0,"unit":"minutes"},"enum":"afterDepartureEnd"}},"labels":[],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["653fd601f90509541a748683","6654ae4eba54fe502d4e4187"],"active":true,"enabled":true,"code":"159159","ownerIds":[{"_id":"668309b8bb41bfd79a461dc4","id":"653fd68233d83952fafcd4be","role":"superCommunity"}],"notifications":[],"driverParams":[],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"653fd601f90509541a748683","name":"Conductor Super Comunidad","email":"nicolas+conductorsc1@allrideapp.com","hasToChangePassword":false,"createdAt":"2024-07-01T19:55:36.928Z","updatedAt":"2025-06-26T17:01:58.362Z","__v":4,"accessToken":"74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6","device":{"lang":"es","token":"e3myoxzpRwSAG5WrhZjyRq:APA91bHXKkdIaR3-l9-ML0f4WQ2NvyyMNrtSootoKie2j7o2ps-GVofvIHibOOwqFC_NR10i2FMhhsZxppT_rkWZXjVLnlyWw8XVD28k-PA1W_CgfjiyjzM","manufacturer":"Xiaomi","model":"Redmi Note 7","lastUpdate":null,"appVersion":"3.0.33-DBG","lastSeenOnline":"2025-06-26T17:01:58.354Z"},"rtlToken":"e380b596956125ea08cc75452da851105dd20610e8faac2fd84e1400f82056e45591ff54bd08bb7c0a74a98ff02dd6b51a160095890bc845a300215ffaf35855","canReleaseReservations":true,"enabledRoutes":[],"customParams":[{"communities":["6654ae4eba54fe502d4e4187"],"_id":"6809486de3ea3e5d72ccf561","superCommunityId":null,"params":[{"listValue":[],"attachments":["https://s3.amazonaws.com/allride.uploads/driverparam_attach_668309b8bb41bfd79a461dc3_6654ae4eba54fe502d4e4187_1745438823197.png"],"private":false,"_id":"6809486de3ea3e5d72ccf562","key":"registro_patronal","value":"Está rara esta situación","dateValue":null,"expireDate":null},{"listValue":[],"attachments":["https://s3.amazonaws.com/allride.uploads/driverparam_attach_668309b8bb41bfd79a461dc3_6654ae4eba54fe502d4e4187_1745438779042.png"],"private":false,"_id":"6809486de3ea3e5d72ccf563","key":"REPE","value":"Hola","dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf564","key":"listado_personal","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf565","key":"onboarding","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf566","key":"SUA","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf567","key":"seguro_social","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf568","key":"certificado_medico","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf569","key":"antidoping","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf56a","key":" identificacion_oficial","value":null,"dateValue":null,"expireDate":null}]}],"externalDeviceToken":"a1b98f78081bcf405131159c329bf8473467a9be94e62816f5d647121fb5a4a0f276cf4bd1631472f4a85d207750ce0b6327239dacb674f308afc4d4099c745a","chatToken":"6a2c06efa7b9158fc88b17c1af6c617730a17af2f9a4a40f4e98dc28080e2e53670102f8c21e5b12cd27dd35e6eb300609c65608dcec5fd0b209042d2e0bdc7b","canCreateRoutes":false,"externalInfo":{"uuid":"","contract":""}},"driverCode":"159159","drivers":[],"vehicleId":{"_id":"66830b98bb41bfd79a4620ac","category":"66830b1a30b7052ec7743255","plate":"MORISC","code":"171222"},"busCode":"MORISC","startCapacity":46,"routeId":{"_id":"67f7e2fe52999601de99bca2","trail":{"enabled":false,"adjustByRounds":false},"rounds":{"enabled":false,"anchorStops":[]},"notifyUsersByStop":{"enabled":false,"sendTo":{"destinataries":"admins","emails":[],"adminLevels":[],"roleIds":[]}},"excludePassengers":{"active":false,"excludeType":"dontHide"},"scheduling":{"enabled":true,"schedule":[{"capped":{"enabled":false,"capacity":0,"by":"vehicle"},"restrictPassengers":{"validation":{"enabled":false,"conditional":"or","excludes":false,"parameters":[],"parameter":[]},"reservation":{"enabled":false,"conditional":"or","excludes":false,"parameters":[],"parameter":[]},"visibility":{"enabled":false,"conditional":"or","excludes":false,"parameters":[],"parameter":[]},"enabled":false},"reservations":{"enabled":false,"list":[]},"enabled":true,"_id":"68659e0e1663e447eea02f05","day":"wed","time":"18:01","estimatedArrival":null,"vehicleCategoryId":null,"serviceCost":0,"observations":"","stopSchedule":[],"defaultResources":[]}],"defaultServiceCost":null,"lateNotification":{"enabled":false,"amount":0,"unit":"minutes"},"stopNotification":{"enabled":false,"amount":0,"unit":"minutes"},"limitUnit":"minutes","limitAmount":30,"startLimit":{"upperLimit":{"amount":60,"unit":"minutes"},"lowerLimit":{"amount":30,"unit":"minutes"}},"restrictions":{"customParams":{"enabled":false,"params":[]},"byQuantity":{"unit":"days","userSkip":[]},"timeRules":{"booking":{"windowsTime":[]}},"_id":"68659e0e1663e447eea02f06"},"stopOnReservation":false,"serviceCreationLimit":{"enabled":false,"date":null}},"rating":{"enabled":false,"withValidation":false},"endDepartureNotice":{"enabled":false,"lastStop":null},"restrictPassengers":{"enabled":false,"visibility":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"reservation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"},"validation":{"enabled":false,"excludes":false,"parameters":[],"conditional":"or"}},"snapshots":{"enabled":false},"validationParams":{"driverParams":[],"passengerParams":[]},"canResume":{"timeLimit":{"enabled":false,"amount":5,"unit":"minutes"},"enabled":false},"departureHourFulfillment":{"enabled":false,"ranges":[]},"arrivalHourFulfillment":{"enabled":false,"ranges":[]},"validateDeparture":{"enabled":true},"minimumConfirmationTime":{"enabled":false,"amount":1,"unit":"hours"},"minimumTimeToForceDeparture":{"enabled":false,"amount":5,"unit":"minutes"},"endServiceLegAutomatically":{"enabled":false,"stopId":null,"distance":100,"timer":{"amount":5,"unit":"minutes"}},"DNIValidation":{"enabled":false,"options":["qr"]},"validation":{"external":[]},"assistantIds":["66ccdf58193998eca49014c3"],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["6654ae4eba54fe502d4e4187"],"active":true,"visible":true,"internal":false,"anchorStops":[],"isStatic":false,"labels":[],"hasExternalGPS":false,"hasCapacity":true,"hasBeacons":true,"hasRounds":false,"hasBoardingCount":false,"hasUnboardingCount":false,"usesBusCode":false,"usesVehicleList":true,"dynamicSeatAssignment":false,"usesDriverCode":false,"usesDriverPin":false,"usesTickets":true,"usesPasses":false,"usesTextToSpeech":false,"allowsManualValidation":true,"allowsRating":true,"allowsOnlyExistingDrivers":false,"allowsMultipleDrivers":false,"allowsDebugging":false,"startsOnStop":false,"notNearStop":false,"allowsNonServiceSnapshots":false,"allowsServiceSnapshots":false,"allowsDistance":true,"usesOfflineCount":false,"hasBoardings":true,"hasUnboardings":true,"usesManualSeat":true,"noPassengerInfo":false,"showParable":false,"showStops":true,"allowGenericVehicles":true,"usesVehicleQRLink":false,"skipDeclaration":false,"skipQRValidation":false,"assistantAssignsSeat":true,"hasBarrier":false,"name":"Cancel reservation","shapeId":{"_id":"6654d514713b9a5184cfe21e","communities":["6654ae4eba54fe502d4e4187"],"superCommunities":[],"name":"rengo","markers":[{"_id":"6654d514713b9a5184cfe21f","lat":-34.41083169777463,"lng":-70.85323168094108,"draggable":true,"label":"A"},{"_id":"6654d514713b9a5184cfe220","lat":-34.39439473078348,"lng":-70.78211782277208,"draggable":true,"label":"B"}],"avoid":{"ferries":false,"highways":false,"tolls":false},"points":[{"_id":"6842ffc10459d00047b07e25","loc":[-70.85332000000001,-34.41095],"lat":-34.41095,"lon":-70.85332000000001,"sequence":0},{"_id":"6842ffc10459d00047b07e26","loc":[-70.85372000000001,-34.41085],"lat":-34.41085,"lon":-70.85372000000001,"sequence":1},{"_id":"6842ffc10459d00047b07e27","loc":[-70.85358000000001,-34.41033],"lat":-34.41033,"lon":-70.85358000000001,"sequence":2},{"_id":"6842ffc10459d00047b07e28","loc":[-70.85340000000001,-34.409710000000004],"lat":-34.409710000000004,"lon":-70.85340000000001,"sequence":3},{"_id":"6842ffc10459d00047b07e29","loc":[-70.85332000000001,-34.409400000000005],"lat":-34.409400000000005,"lon":-70.85332000000001,"sequence":4},{"_id":"6842ffc10459d00047b07e2a","loc":[-70.85274000000001,-34.407970000000006],"lat":-34.407970000000006,"lon":-70.85274000000001,"sequence":5},{"_id":"6842ffc10459d00047b07e2b","loc":[-70.85227,-34.40731],"lat":-34.40731,"lon":-70.85227,"sequence":6},{"_id":"6842ffc10459d00047b07e2c","loc":[-70.852,-34.40699],"lat":-34.40699,"lon":-70.852,"sequence":... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20250702 17:01:26.684" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:01:26.099" endtime="20250702 17:01:26.684"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250702 17:01:26.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 17:01:26.685" endtime="20250702 17:01:26.688"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${capacity}</var>
<arg>${response.json()}[capacity]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:26.694" level="INFO">${capacity} = 46</msg>
<status status="PASS" starttime="20250702 17:01:26.689" endtime="20250702 17:01:26.694"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${startCapacity}</var>
<arg>${response.json()}[startCapacity]as</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:26.699" level="INFO">${startCapacity} = 46as</msg>
<status status="PASS" starttime="20250702 17:01:26.695" endtime="20250702 17:01:26.701"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${capacity}</arg>
<arg>46</arg>
<arg>msg=❌ 'capacity' should be 46 but was ${capacity}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250702 17:01:26.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 17:01:26.703" endtime="20250702 17:01:26.706"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${startCapacity}</arg>
<arg>46as</arg>
<arg>msg=❌ 'startCapacity' should be 46 but was ${startCapacity}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250702 17:01:26.710" endtime="20250702 17:01:26.713"/>
</kw>
<status status="PASS" starttime="20250702 17:01:26.093" endtime="20250702 17:01:26.715"/>
</test>
<test id="s1-t8" name="Get Driver Token" line="186">
<kw name="Set Variable" library="BuiltIn">
<var>${url}</var>
<arg>${STAGE_URL}/api/v1/admin/pb/drivers/?community=${idComunidad2}&amp;driverId=${driverId2}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:26.721" level="INFO">${url} = https://stage.allrideapp.com/api/v1/admin/pb/drivers/?community=6654ae4eba54fe502d4e4187&amp;driverId=668309b8bb41bfd79a461dc3</msg>
<status status="PASS" starttime="20250702 17:01:26.719" endtime="20250702 17:01:26.722"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Authorization=${tokenAdmin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:01:26.726" level="INFO">&amp;{headers} = { Authorization=Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14 }</msg>
<status status="PASS" starttime="20250702 17:01:26.725" endtime="20250702 17:01:26.727"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>url=${url}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20250702 17:01:27.215" level="INFO">GET Request : url=https://stage.allrideapp.com/api/v1/admin/pb/drivers/?community=6654ae4eba54fe502d4e4187&amp;driverId=668309b8bb41bfd79a461dc3 
 path_url=/api/v1/admin/pb/drivers/?community=6654ae4eba54fe502d4e4187&amp;driverId=668309b8bb41bfd79a461dc3 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer b319bd92a78d4edca7e157317752ef672373f850e5fac5399dac5b793fc245207a2411be9b7a521df32f74bc007420cfe362265d2c61c19438e720aa9f8d7b14'} 
 body=None 
 </msg>
<msg timestamp="20250702 17:01:27.216" level="INFO">GET Response : url=https://stage.allrideapp.com/api/v1/admin/pb/drivers/?community=6654ae4eba54fe502d4e4187&amp;driverId=668309b8bb41bfd79a461dc3 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '200', 'X-RateLimit-Remaining': '199', 'X-RateLimit-Reset': '1751490150', 'ETag': 'W/"def-XfVX8X7z4FSotdfnyxLmahQhEfo"', 'Content-Encoding': 'gzip'} 
 body={"device":{"lang":"es","token":"e3myoxzpRwSAG5WrhZjyRq:APA91bHXKkdIaR3-l9-ML0f4WQ2NvyyMNrtSootoKie2j7o2ps-GVofvIHibOOwqFC_NR10i2FMhhsZxppT_rkWZXjVLnlyWw8XVD28k-PA1W_CgfjiyjzM","manufacturer":"Xiaomi","model":"Redmi Note 7","lastUpdate":null,"appVersion":"3.0.33-DBG","lastSeenOnline":"2025-06-26T17:01:58.354Z"},"config":{"autoLogout":{"timer":{"amount":0,"unit":"minutes"},"enum":"afterDepartureEnd","enabled":false}},"externalInfo":{"uuid":"","contract":""},"labels":[],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["653fd601f90509541a748683","6654ae4eba54fe502d4e4187"],"active":true,"canReleaseReservations":true,"enabled":true,"enabledRoutes":[],"_id":"668309b8bb41bfd79a461dc3","code":"159159","ownerIds":[{"_id":"668309b8bb41bfd79a461dc4","id":"653fd68233d83952fafcd4be","role":"superCommunity"}],"notifications":[],"driverParams":[],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"653fd601f90509541a748683","name":"Conductor Super Comunidad","email":"nicolas+conductorsc1@allrideapp.com","hasToChangePassword":false,"createdAt":"2024-07-01T19:55:36.928Z","updatedAt":"2025-06-26T17:01:58.362Z","__v":4,"accessToken":"74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6","rtlToken":"e380b596956125ea08cc75452da851105dd20610e8faac2fd84e1400f82056e45591ff54bd08bb7c0a74a98ff02dd6b51a160095890bc845a300215ffaf35855","customParams":[{"communities":["6654ae4eba54fe502d4e4187"],"_id":"6809486de3ea3e5d72ccf561","superCommunityId":null,"params":[{"listValue":[],"attachments":["https://s3.amazonaws.com/allride.uploads/driverparam_attach_668309b8bb41bfd79a461dc3_6654ae4eba54fe502d4e4187_1745438823197.png"],"private":false,"_id":"6809486de3ea3e5d72ccf562","key":"registro_patronal","value":"Está rara esta situación","dateValue":null,"expireDate":null},{"listValue":[],"attachments":["https://s3.amazonaws.com/allride.uploads/driverparam_attach_668309b8bb41bfd79a461dc3_6654ae4eba54fe502d4e4187_1745438779042.png"],"private":false,"_id":"6809486de3ea3e5d72ccf563","key":"REPE","value":"Hola","dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf564","key":"listado_personal","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf565","key":"onboarding","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf566","key":"SUA","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf567","key":"seguro_social","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf568","key":"certificado_medico","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf569","key":"antidoping","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf56a","key":" identificacion_oficial","value":null,"dateValue":null,"expireDate":null}]}],"externalDeviceToken":"a1b98f78081bcf405131159c329bf8473467a9be94e62816f5d647121fb5a4a0f276cf4bd1631472f4a85d207750ce0b6327239dacb674f308afc4d4099c745a","chatToken":"6a2c06efa7b9158fc88b17c1af6c617730a17af2f9a4a40f4e98dc28080e2e53670102f8c21e5b12cd27dd35e6eb300609c65608dcec5fd0b209042d2e0bdc7b","canCreateRoutes":false,"id":"668309b8bb41bfd79a461dc3"} 
 </msg>
<msg timestamp="20250702 17:01:27.216" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:01:26.729" endtime="20250702 17:01:27.216"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250702 17:01:27.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 17:01:27.219" endtime="20250702 17:01:27.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${access_token}</var>
<arg>${response.json()['accessToken']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:27.228" level="INFO">${access_token} = 74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6</msg>
<status status="PASS" starttime="20250702 17:01:27.226" endtime="20250702 17:01:27.228"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${tokenDriver}</var>
<arg>"Bearer " + "${access_token}"</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250702 17:01:27.234" level="INFO">${tokenDriver} = Bearer 74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6</msg>
<status status="PASS" starttime="20250702 17:01:27.232" endtime="20250702 17:01:27.235"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${tokenDriver}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:01:27.240" level="INFO">${tokenDriver} = Bearer 74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6</msg>
<status status="PASS" starttime="20250702 17:01:27.239" endtime="20250702 17:01:27.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${tokenDriver}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:01:27.245" level="INFO">Bearer 74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6</msg>
<status status="PASS" starttime="20250702 17:01:27.242" endtime="20250702 17:01:27.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:01:27.258" level="INFO">{"device":{"lang":"es","token":"e3myoxzpRwSAG5WrhZjyRq:APA91bHXKkdIaR3-l9-ML0f4WQ2NvyyMNrtSootoKie2j7o2ps-GVofvIHibOOwqFC_NR10i2FMhhsZxppT_rkWZXjVLnlyWw8XVD28k-PA1W_CgfjiyjzM","manufacturer":"Xiaomi","model":"Redmi Note 7","lastUpdate":null,"appVersion":"3.0.33-DBG","lastSeenOnline":"2025-06-26T17:01:58.354Z"},"config":{"autoLogout":{"timer":{"amount":0,"unit":"minutes"},"enum":"afterDepartureEnd","enabled":false}},"externalInfo":{"uuid":"","contract":""},"labels":[],"superCommunities":["653fd68233d83952fafcd4be"],"communities":["653fd601f90509541a748683","6654ae4eba54fe502d4e4187"],"active":true,"canReleaseReservations":true,"enabled":true,"enabledRoutes":[],"_id":"668309b8bb41bfd79a461dc3","code":"159159","ownerIds":[{"_id":"668309b8bb41bfd79a461dc4","id":"653fd68233d83952fafcd4be","role":"superCommunity"}],"notifications":[],"driverParams":[],"superCommunityId":"653fd68233d83952fafcd4be","communityId":"653fd601f90509541a748683","name":"Conductor Super Comunidad","email":"nicolas+conductorsc1@allrideapp.com","hasToChangePassword":false,"createdAt":"2024-07-01T19:55:36.928Z","updatedAt":"2025-06-26T17:01:58.362Z","__v":4,"accessToken":"74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6","rtlToken":"e380b596956125ea08cc75452da851105dd20610e8faac2fd84e1400f82056e45591ff54bd08bb7c0a74a98ff02dd6b51a160095890bc845a300215ffaf35855","customParams":[{"communities":["6654ae4eba54fe502d4e4187"],"_id":"6809486de3ea3e5d72ccf561","superCommunityId":null,"params":[{"listValue":[],"attachments":["https://s3.amazonaws.com/allride.uploads/driverparam_attach_668309b8bb41bfd79a461dc3_6654ae4eba54fe502d4e4187_1745438823197.png"],"private":false,"_id":"6809486de3ea3e5d72ccf562","key":"registro_patronal","value":"Est\xc3\xa1 rara esta situaci\xc3\xb3n","dateValue":null,"expireDate":null},{"listValue":[],"attachments":["https://s3.amazonaws.com/allride.uploads/driverparam_attach_668309b8bb41bfd79a461dc3_6654ae4eba54fe502d4e4187_1745438779042.png"],"private":false,"_id":"6809486de3ea3e5d72ccf563","key":"REPE","value":"Hola","dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf564","key":"listado_personal","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf565","key":"onboarding","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf566","key":"SUA","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf567","key":"seguro_social","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf568","key":"certificado_medico","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf569","key":"antidoping","value":null,"dateValue":null,"expireDate":null},{"listValue":[],"attachments":[],"private":false,"_id":"6809486de3ea3e5d72ccf56a","key":" identificacion_oficial","value":null,"dateValue":null,"expireDate":null}]}],"externalDeviceToken":"a1b98f78081bcf405131159c329bf8473467a9be94e62816f5d647121fb5a4a0f276cf4bd1631472f4a85d207750ce0b6327239dacb674f308afc4d4099c745a","chatToken":"6a2c06efa7b9158fc88b17c1af6c617730a17af2f9a4a40f4e98dc28080e2e53670102f8c21e5b12cd27dd35e6eb300609c65608dcec5fd0b209042d2e0bdc7b","canCreateRoutes":false,"id":"668309b8bb41bfd79a461dc3"}</msg>
<status status="PASS" starttime="20250702 17:01:27.247" endtime="20250702 17:01:27.260"/>
</kw>
<status status="PASS" starttime="20250702 17:01:26.718" endtime="20250702 17:01:27.263"/>
</test>
<test id="s1-t9" name="Start Departure Leg" line="207">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250702 17:01:27.275" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250702 17:01:27.266" endtime="20250702 17:01:27.278"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${tokenDriver}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:01:27.283" level="INFO">${headers} = {'Authorization': 'Bearer 74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250702 17:01:27.282" endtime="20250702 17:01:27.283"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v2/pb/driver/departures</arg>
<arg>data={"communityId":"${idComunidad2}","startLat":-33.3908833,"startLon":-70.54620129999999,"customParamsAtStart":[],"preTripChecklist":[],"routeId":"${scheduleId}","capacity":3,"busCode":"1111","vehicleId":"${vehicleId2}","shareToUsers":false,"customParams":[],"pin":null}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250702 17:01:27.959" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v2/pb/driver/departures 
 path_url=/api/v2/pb/driver/departures 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer 74ceb8ea9f16bd4442e0c624a438d9f0b2d9b33ba486d904dd1fad8c091681d94a15ba1a1b466569088e4efab39d0670799cd28b134b0066fbbf9584b804f8d6', 'Content-Type': 'application/json', 'Content-Length': '298'} 
 body={"communityId":"6654ae4eba54fe502d4e4187","startLat":-33.3908833,"startLon":-70.54620129999999,"customParamsAtStart":[],"preTripChecklist":[],"routeId":"67f7e2fe52999601de99bca2","capacity":3,"busCode":"1111","vehicleId":"66830b98bb41bfd79a4620ac","shareToUsers":false,"customParams":[],"pin":null} 
 </msg>
<msg timestamp="20250702 17:01:27.960" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v2/pb/driver/departures 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:29 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'ETag': 'W/"12c0-7c15KqKP7VdE46gnizSMQQbkpNM"', 'Content-Encoding': 'gzip'} 
 body={"restrictPassengers":{"validation":{"enabled":false,"parameters":[]},"reservation":{"enabled":false,"parameters":[]},"visibility":{"enabled":false,"parameters":[]},"enabled":false},"superCommunities":[],"communities":["6654ae4eba54fe502d4e4187"],"assistantIds":["66ccdf58193998eca49014c3"],"labels":[],"active":true,"sharing":true,"disabled":false,"internal":false,"rounds":0,"distance":0,"scheduled":false,"odd":false,"estimatedDistance":0,"extraMinutes":0,"placeWaitTime":0,"hasExternalGPS":false,"allowsServiceSnapshots":false,"allowsNonServiceSnapshots":false,"allowsSnapshots":false,"allowsDistance":true,"usesOfflineCount":false,"linkedDepartures":[],"_id":"68659e296bc6910d71d2532b","driverId":"668309b8bb41bfd79a461dc3","routeId":"67f7e2fe52999601de99bca2","drivers":[],"categories":[],"trail":[],"legs":[{"distance":0,"_id":"68659e296bc6910d71d25364","type":"service","startedAt":"2025-07-02T21:01:29.875Z","realStartLocation":{"_id":"68659e296bc6910d71d25365","lat":-33.3908833,"lon":-70.54620129999999,"loc":[-70.54620129999999,-33.3908833]},"preTripChecklist":[],"customParamsAtStart":[],"customParamsAtTheEnd":[]}],"stateHistory":[],"deviceHistory":[],"apportionByCategories":[],"reservations":[],"enabledSeats":[{"available":true,"_id":"68659e296bc6910d71d25331","seat":"1"},{"available":true,"_id":"68659e296bc6910d71d25332","seat":"2"},{"available":true,"_id":"68659e296bc6910d71d25333","seat":"3"},{"available":true,"_id":"68659e296bc6910d71d25334","seat":"4"},{"available":true,"_id":"68659e296bc6910d71d25335","seat":"5"},{"available":true,"_id":"68659e296bc6910d71d25336","seat":"6"},{"available":true,"_id":"68659e296bc6910d71d25337","seat":"7"},{"available":true,"_id":"68659e296bc6910d71d25338","seat":"8"},{"available":true,"_id":"68659e296bc6910d71d25339","seat":"9"},{"available":true,"_id":"68659e296bc6910d71d2533a","seat":"10"},{"available":true,"_id":"68659e296bc6910d71d2533b","seat":"11"},{"available":true,"_id":"68659e296bc6910d71d2533c","seat":"12"},{"available":true,"_id":"68659e296bc6910d71d2533d","seat":"13"},{"available":true,"_id":"68659e296bc6910d71d2533e","seat":"14"},{"available":true,"_id":"68659e296bc6910d71d2533f","seat":"15"},{"available":true,"_id":"68659e296bc6910d71d25340","seat":"16"},{"available":true,"_id":"68659e296bc6910d71d25341","seat":"17"},{"available":true,"_id":"68659e296bc6910d71d25342","seat":"18"},{"available":true,"_id":"68659e296bc6910d71d25343","seat":"19"},{"available":true,"_id":"68659e296bc6910d71d25344","seat":"20"},{"available":true,"_id":"68659e296bc6910d71d25345","seat":"21"},{"available":true,"_id":"68659e296bc6910d71d25346","seat":"22"},{"available":true,"_id":"68659e296bc6910d71d25347","seat":"23"},{"available":true,"_id":"68659e296bc6910d71d25348","seat":"24"},{"available":true,"_id":"68659e296bc6910d71d25349","seat":"25"},{"available":true,"_id":"68659e296bc6910d71d2534a","seat":"26"},{"available":true,"_id":"68659e296bc6910d71d2534b","seat":"27"},{"available":true,"_id":"68659e296bc6910d71d2534c","seat":"28"},{"available":true,"_id":"68659e296bc6910d71d2534d","seat":"29"},{"available":true,"_id":"68659e296bc6910d71d2534e","seat":"30"},{"available":true,"_id":"68659e296bc6910d71d2534f","seat":"31"},{"available":true,"_id":"68659e296bc6910d71d25350","seat":"32"},{"available":true,"_id":"68659e296bc6910d71d25351","seat":"33"},{"available":true,"_id":"68659e296bc6910d71d25352","seat":"34"},{"available":true,"_id":"68659e296bc6910d71d25353","seat":"35"},{"available":true,"_id":"68659e296bc6910d71d25354","seat":"36"},{"available":true,"_id":"68659e296bc6910d71d25355","seat":"37"},{"available":true,"_id":"68659e296bc6910d71d25356","seat":"38"},{"available":true,"_id":"68659e296bc6910d71d25357","seat":"39"},{"available":true,"_id":"68659e296bc6910d71d25358","seat":"40"},{"available":true,"_id":"68659e296bc6910d71d25359","seat":"41"},{"available":true,"_id":"68659e296bc6910d71d2535a","seat":"42"},{"available":true,"_id":"68659e296bc6910d71d2535b","seat":"43"},{"available":true,"_id":"68659e296bc6910d71d2535c","seat":"44"},{"available":true,"_id":"68659e296bc6910d71d2535d","seat":"45"},{"available":true,"_id":"68659e296bc6910d71d2535e","seat":"46"}],"customParams":[],"customParamsAtTheEnd":[],"preTripChecklist":[],"speedAlerts":[],"deviationAlerts":[],"communityId":"6654ae4eba54fe502d4e4187","busCode":"MORISC","capacity":46,"startCapacity":46,"vehicleId":"66830b98bb41bfd79a4620ac","startedAt":"2025-07-02T21:01:29.865Z","realStartLocation":{"_id":"68659e296bc6910d71d25362","lat":-33.3908833,"lon":-70.54620129999999,"loc":[-70.54620129999999,-33.3908833]},"token":"fbdabd41b9eeaf4ba6fccc76e09ba9312a3fda0790e717dfc43b53d973e1944203c64b3c451dd237d795b00025a4ed46e541ccd95e325b34239c024f6c88d206","createdAt":"2025-07-02T21:01:29.882Z","updatedAt":"2025-07-02T21:01:29.882Z","__v":0} 
 </msg>
<msg timestamp="20250702 17:01:27.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:01:27.290" endtime="20250702 17:01:27.960"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250702 17:01:27.964" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250702 17:01:27.962" endtime="20250702 17:01:27.966"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250702 17:01:27.967" endtime="20250702 17:01:27.968"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${access_token}</var>
<arg>${response.json()}[token]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:27.972" level="INFO">${access_token} = fbdabd41b9eeaf4ba6fccc76e09ba9312a3fda0790e717dfc43b53d973e1944203c64b3c451dd237d795b00025a4ed46e541ccd95e325b34239c024f6c88d206</msg>
<status status="PASS" starttime="20250702 17:01:27.969" endtime="20250702 17:01:27.973"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${departureToken}</var>
<arg>"Bearer " + "${access_token}"</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250702 17:01:27.980" level="INFO">${departureToken} = Bearer fbdabd41b9eeaf4ba6fccc76e09ba9312a3fda0790e717dfc43b53d973e1944203c64b3c451dd237d795b00025a4ed46e541ccd95e325b34239c024f6c88d206</msg>
<status status="PASS" starttime="20250702 17:01:27.976" endtime="20250702 17:01:27.980"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${departureToken}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:01:27.982" level="INFO">${departureToken} = Bearer fbdabd41b9eeaf4ba6fccc76e09ba9312a3fda0790e717dfc43b53d973e1944203c64b3c451dd237d795b00025a4ed46e541ccd95e325b34239c024f6c88d206</msg>
<status status="PASS" starttime="20250702 17:01:27.981" endtime="20250702 17:01:27.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${departureToken}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:01:27.985" level="INFO">Bearer fbdabd41b9eeaf4ba6fccc76e09ba9312a3fda0790e717dfc43b53d973e1944203c64b3c451dd237d795b00025a4ed46e541ccd95e325b34239c024f6c88d206</msg>
<status status="PASS" starttime="20250702 17:01:27.985" endtime="20250702 17:01:27.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:01:27.991" level="INFO">200</msg>
<status status="PASS" starttime="20250702 17:01:27.989" endtime="20250702 17:01:27.992"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${departureId}</var>
<arg>${response.json()}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:28.000" level="INFO">${departureId} = 68659e296bc6910d71d2532b</msg>
<status status="PASS" starttime="20250702 17:01:27.996" endtime="20250702 17:01:28.001"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${departureId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:01:28.005" level="INFO">${departureId} = 68659e296bc6910d71d2532b</msg>
<status status="PASS" starttime="20250702 17:01:28.003" endtime="20250702 17:01:28.005"/>
</kw>
<status status="PASS" starttime="20250702 17:01:27.266" endtime="20250702 17:01:28.008"/>
</test>
<test id="s1-t10" name="Validate EXT" line="234">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250702 17:01:28.011" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250702 17:01:28.011" endtime="20250702 17:01:28.011"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=Bearer Nico86d174zd6e6f33b2cfu3a6m0c14cdf2ff32o3fbb56N7p10s4647bf62ad5ae2277ae6sb549e455b736n</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:01:28.013" level="INFO">${headers} = {'Authorization': 'Bearer Nico86d174zd6e6f33b2cfu3a6m0c14cdf2ff32o3fbb56N7p10s4647bf62ad5ae2277ae6sb549e455b736n', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250702 17:01:28.012" endtime="20250702 17:01:28.013"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/ext/api/v1/departures/validate</arg>
<arg>data={"validationString":"be3655a0bd8479cfcdf46f8654f2d70341e2fe7428c9ac3a3933740575440ceef4c05aa02e4bef6b04324e25fe841ea1991391f3937b4234be7611bb8267bc0d666078059a5ece0ee6e95904","departureId":"68656a5bc282622e99dfc85c","validationLat":-38.75643,"validationLon":-73.66834}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250702 17:01:28.692" level="INFO">POST Request : url=https://stage.allrideapp.com/ext/api/v1/departures/validate 
 path_url=/ext/api/v1/departures/validate 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer Nico86d174zd6e6f33b2cfu3a6m0c14cdf2ff32o3fbb56N7p10s4647bf62ad5ae2277ae6sb549e455b736n', 'Content-Type': 'application/json', 'Content-Length': '268'} 
 body={"validationString":"be3655a0bd8479cfcdf46f8654f2d70341e2fe7428c9ac3a3933740575440ceef4c05aa02e4bef6b04324e25fe841ea1991391f3937b4234be7611bb8267bc0d666078059a5ece0ee6e95904","departureId":"68656a5bc282622e99dfc85c","validationLat":-38.75643,"validationLon":-73.66834} 
 </msg>
<msg timestamp="20250702 17:01:28.692" level="INFO">POST Response : url=https://stage.allrideapp.com/ext/api/v1/departures/validate 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:30 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'X-RateLimit-Limit': '30', 'X-RateLimit-Remaining': '29', 'X-RateLimit-Reset': '1751490151', 'ETag': 'W/"36c-I57736GHSD80sGKf14OpHyjTVik"', 'Content-Encoding': 'gzip'} 
 body={"busValidationParams":{"preValidationPassenger":{"answers":[]},"driver":{"answers":[]},"validatedPassenger":{"answers":[]}},"validated":true,"reason":["timestamp"],"_id":"68659e2a6bc6910d71d25372","routeId":"6654d533713b9a5184cfe319","departureId":"68656a5bc282622e99dfc85c","validationString":"be3655a0bd8479cfcdf46f8654f2d70341e2fe7428c9ac3a3933740575440ceef4c05aa02e4bef6b04324e25fe841ea1991391f3937b4234be7611bb8267bc0d666078059a5ece0ee6e95904","history":[],"loc":[-73.66834,-38.75643],"latitude":-38.75643,"longitude":-73.66834,"lat":-38.75643,"lon":-73.66834,"userId":"666078059a5ece0ee6e95904","communityId":"6654ae4eba54fe502d4e4187","createdAt":"2025-07-02T21:01:30.640Z","updatedAt":"2025-07-02T21:01:30.640Z","__v":0,"user":{"_id":"666078059a5ece0ee6e95904","name":"Nicolas Bustamante","avatar":"https://s3.amazonaws.com/adedo.users-avatars/user_placeholder.png"}} 
 </msg>
<msg timestamp="20250702 17:01:28.693" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:01:28.016" endtime="20250702 17:01:28.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:28.701" level="INFO">${json} = {'busValidationParams': {'preValidationPassenger': {'answers': []}, 'driver': {'answers': []}, 'validatedPassenger': {'answers': []}}, 'validated': True, 'reason': ['timestamp'], '_id': '68659e2a6bc69...</msg>
<status status="PASS" starttime="20250702 17:01:28.696" endtime="20250702 17:01:28.706"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${json}</arg>
<arg>msg=❌ Validation response is empty — expected validation data but received none.</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250702 17:01:28.712" level="INFO">Length is 19</msg>
<status status="PASS" starttime="20250702 17:01:28.712" endtime="20250702 17:01:28.713"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${VALIDATION_ID}</var>
<arg>${json}[_id]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:28.719" level="INFO">${VALIDATION_ID} = 68659e2a6bc6910d71d25372</msg>
<status status="PASS" starttime="20250702 17:01:28.718" endtime="20250702 17:01:28.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${USER_ID}</var>
<arg>${json}[userId]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:28.725" level="INFO">${USER_ID} = 666078059a5ece0ee6e95904</msg>
<status status="PASS" starttime="20250702 17:01:28.724" endtime="20250702 17:01:28.726"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${USER_NAME}</var>
<arg>${json}[user][name]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:28.729" level="INFO">${USER_NAME} = Nicolas Bustamante</msg>
<status status="PASS" starttime="20250702 17:01:28.727" endtime="20250702 17:01:28.729"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${VALIDATED}</var>
<arg>${json}[validated]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:28.733" level="INFO">${VALIDATED} = True</msg>
<status status="PASS" starttime="20250702 17:01:28.733" endtime="20250702 17:01:28.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${REASON}</var>
<arg>${json}[reason][0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250702 17:01:28.737" level="INFO">${REASON} = timestamp</msg>
<status status="PASS" starttime="20250702 17:01:28.737" endtime="20250702 17:01:28.737"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${VALIDATION_ID}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:01:28.739" level="INFO">${VALIDATION_ID} = 68659e2a6bc6910d71d25372</msg>
<status status="PASS" starttime="20250702 17:01:28.738" endtime="20250702 17:01:28.739"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${USER_ID}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250702 17:01:28.743" level="INFO">${USER_ID} = 666078059a5ece0ee6e95904</msg>
<status status="PASS" starttime="20250702 17:01:28.741" endtime="20250702 17:01:28.743"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${VALIDATED}</arg>
<arg>msg=❌ Expected the user to be validated, but got '${VALIDATED}'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250702 17:01:28.745" endtime="20250702 17:01:28.747"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${REASON}</arg>
<arg>timestamp</arg>
<arg>msg=❌ Expected validation reason to be 'timestamp', but got '${REASON}'</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250702 17:01:28.748" endtime="20250702 17:01:28.749"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${USER_ID}</arg>
<arg>msg=❌ userId is missing or empty</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250702 17:01:28.751" level="INFO">Length is 24</msg>
<status status="PASS" starttime="20250702 17:01:28.751" endtime="20250702 17:01:28.753"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${USER_NAME}</arg>
<arg>msg=❌ user.name is missing or empty</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250702 17:01:28.755" level="INFO">Length is 18</msg>
<status status="PASS" starttime="20250702 17:01:28.754" endtime="20250702 17:01:28.755"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${json}[latitude]</arg>
<arg>-38.75643</arg>
<arg>msg=❌ Expected latitude -38.75643 but got ${json}[latitude]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250702 17:01:28.760" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 17:01:28.757" endtime="20250702 17:01:28.761"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${json}[longitude]</arg>
<arg>-73.66834</arg>
<arg>msg=❌ Expected longitude -73.66834 but got ${json}[longitude]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20250702 17:01:28.763" level="INFO">Argument types are:
&lt;class 'float'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250702 17:01:28.762" endtime="20250702 17:01:28.763"/>
</kw>
<status status="PASS" starttime="20250702 17:01:28.010" endtime="20250702 17:01:28.767"/>
</test>
<test id="s1-t11" name="Stop Post Leg Departure" line="288">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysesion</arg>
<arg>${STAGE_URL}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20250702 17:01:28.779" level="INFO">Creating Session using : alias=mysesion, url=https://stage.allrideapp.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20250702 17:01:28.773" endtime="20250702 17:01:28.779"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Authorization=${departureToken}</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20250702 17:01:28.787" level="INFO">${headers} = {'Authorization': 'Bearer fbdabd41b9eeaf4ba6fccc76e09ba9312a3fda0790e717dfc43b53d973e1944203c64b3c451dd237d795b00025a4ed46e541ccd95e325b34239c024f6c88d206', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20250702 17:01:28.782" endtime="20250702 17:01:28.787"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysesion</arg>
<arg>url=/api/v2/pb/driver/departure/stop</arg>
<arg>data={"customParamsAtEnd":[],"customParamsAtStart":null,"endLat":"-72.6071614","endLon":"-38.7651863","nextLeg":false,"post":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"pre":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"preTripChecklist":null,"service":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"shareToUsers":false}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20250702 17:01:29.612" level="INFO">POST Request : url=https://stage.allrideapp.com/api/v2/pb/driver/departure/stop 
 path_url=/api/v2/pb/driver/departure/stop 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer fbdabd41b9eeaf4ba6fccc76e09ba9312a3fda0790e717dfc43b53d973e1944203c64b3c451dd237d795b00025a4ed46e541ccd95e325b34239c024f6c88d206', 'Content-Type': 'application/json', 'Content-Length': '415'} 
 body={"customParamsAtEnd":[],"customParamsAtStart":null,"endLat":"-72.6071614","endLon":"-38.7651863","nextLeg":false,"post":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"pre":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"preTripChecklist":null,"service":{"customParamsAtEnd":null,"customParamsAtStart":null,"preTripChecklist":null},"shareToUsers":false} 
 </msg>
<msg timestamp="20250702 17:01:29.612" level="INFO">POST Response : url=https://stage.allrideapp.com/api/v2/pb/driver/departure/stop 
 status=200, reason=OK 
 headers={'Date': 'Wed, 02 Jul 2025 21:01:31 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Server': 'nginx', 'X-DNS-Prefetch-Control': 'off', 'X-Frame-Options': 'SAMEORIGIN', 'Strict-Transport-Security': 'max-age=15552000; includeSubDomains', 'X-Download-Options': 'noopen', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Access-Control-Allow-Origin': '*', 'ETag': 'W/"13fd-EZp8HIBunRK6lNI25uJReL+9qvw"', 'Content-Encoding': 'gzip'} 
 body={"restrictPassengers":{"validation":{"enabled":false,"parameters":[]},"reservation":{"enabled":false,"parameters":[]},"visibility":{"enabled":false,"parameters":[]},"enabled":false},"superCommunities":[],"communities":["6654ae4eba54fe502d4e4187"],"assistantIds":["66ccdf58193998eca49014c3"],"labels":[],"active":false,"sharing":true,"disabled":false,"internal":false,"rounds":0,"distance":0,"scheduled":false,"odd":false,"estimatedDistance":0,"extraMinutes":0,"placeWaitTime":0,"hasExternalGPS":false,"allowsServiceSnapshots":false,"allowsNonServiceSnapshots":false,"allowsSnapshots":false,"allowsDistance":true,"usesOfflineCount":false,"linkedDepartures":[],"_id":"68659e296bc6910d71d2532b","driverId":"668309b8bb41bfd79a461dc3","routeId":"67f7e2fe52999601de99bca2","drivers":[],"categories":[],"trail":[],"legs":[{"distance":0,"_id":"68659e296bc6910d71d25364","type":"service","startedAt":"2025-07-02T21:01:29.875Z","realStartLocation":{"_id":"68659e296bc6910d71d25365","lat":-33.3908833,"lon":-70.54620129999999,"loc":[-70.54620129999999,-33.3908833]},"preTripChecklist":[],"customParamsAtStart":[],"customParamsAtTheEnd":[],"realEndLocation":{"_id":"68659e2b1663e447eea02f6c","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"endedAt":"2025-07-02T21:01:31.477Z"}],"stateHistory":[],"deviceHistory":[],"apportionByCategories":[],"reservations":[],"enabledSeats":[{"available":true,"_id":"68659e296bc6910d71d25331","seat":"1"},{"available":true,"_id":"68659e296bc6910d71d25332","seat":"2"},{"available":true,"_id":"68659e296bc6910d71d25333","seat":"3"},{"available":true,"_id":"68659e296bc6910d71d25334","seat":"4"},{"available":true,"_id":"68659e296bc6910d71d25335","seat":"5"},{"available":true,"_id":"68659e296bc6910d71d25336","seat":"6"},{"available":true,"_id":"68659e296bc6910d71d25337","seat":"7"},{"available":true,"_id":"68659e296bc6910d71d25338","seat":"8"},{"available":true,"_id":"68659e296bc6910d71d25339","seat":"9"},{"available":true,"_id":"68659e296bc6910d71d2533a","seat":"10"},{"available":true,"_id":"68659e296bc6910d71d2533b","seat":"11"},{"available":true,"_id":"68659e296bc6910d71d2533c","seat":"12"},{"available":true,"_id":"68659e296bc6910d71d2533d","seat":"13"},{"available":true,"_id":"68659e296bc6910d71d2533e","seat":"14"},{"available":true,"_id":"68659e296bc6910d71d2533f","seat":"15"},{"available":true,"_id":"68659e296bc6910d71d25340","seat":"16"},{"available":true,"_id":"68659e296bc6910d71d25341","seat":"17"},{"available":true,"_id":"68659e296bc6910d71d25342","seat":"18"},{"available":true,"_id":"68659e296bc6910d71d25343","seat":"19"},{"available":true,"_id":"68659e296bc6910d71d25344","seat":"20"},{"available":true,"_id":"68659e296bc6910d71d25345","seat":"21"},{"available":true,"_id":"68659e296bc6910d71d25346","seat":"22"},{"available":true,"_id":"68659e296bc6910d71d25347","seat":"23"},{"available":true,"_id":"68659e296bc6910d71d25348","seat":"24"},{"available":true,"_id":"68659e296bc6910d71d25349","seat":"25"},{"available":true,"_id":"68659e296bc6910d71d2534a","seat":"26"},{"available":true,"_id":"68659e296bc6910d71d2534b","seat":"27"},{"available":true,"_id":"68659e296bc6910d71d2534c","seat":"28"},{"available":true,"_id":"68659e296bc6910d71d2534d","seat":"29"},{"available":true,"_id":"68659e296bc6910d71d2534e","seat":"30"},{"available":true,"_id":"68659e296bc6910d71d2534f","seat":"31"},{"available":true,"_id":"68659e296bc6910d71d25350","seat":"32"},{"available":true,"_id":"68659e296bc6910d71d25351","seat":"33"},{"available":true,"_id":"68659e296bc6910d71d25352","seat":"34"},{"available":true,"_id":"68659e296bc6910d71d25353","seat":"35"},{"available":true,"_id":"68659e296bc6910d71d25354","seat":"36"},{"available":true,"_id":"68659e296bc6910d71d25355","seat":"37"},{"available":true,"_id":"68659e296bc6910d71d25356","seat":"38"},{"available":true,"_id":"68659e296bc6910d71d25357","seat":"39"},{"available":true,"_id":"68659e296bc6910d71d25358","seat":"40"},{"available":true,"_id":"68659e296bc6910d71d25359","seat":"41"},{"available":true,"_id":"68659e296bc6910d71d2535a","seat":"42"},{"available":true,"_id":"68659e296bc6910d71d2535b","seat":"43"},{"available":true,"_id":"68659e296bc6910d71d2535c","seat":"44"},{"available":true,"_id":"68659e296bc6910d71d2535d","seat":"45"},{"available":true,"_id":"68659e296bc6910d71d2535e","seat":"46"}],"customParams":[],"customParamsAtTheEnd":[],"preTripChecklist":[],"speedAlerts":[],"deviationAlerts":[],"communityId":"6654ae4eba54fe502d4e4187","busCode":"MORISC","capacity":46,"startCapacity":46,"vehicleId":"66830b98bb41bfd79a4620ac","startedAt":"2025-07-02T21:01:29.865Z","realStartLocation":{"_id":"68659e296bc6910d71d25362","lat":-33.3908833,"lon":-70.54620129999999,"loc":[-70.54620129999999,-33.3908833]},"token":"fbdabd41b9eeaf4ba6fccc76e09ba9312a3fda0790e717dfc43b53d973e1944203c64b3c451dd237d795b00025a4ed46e541ccd95e325b34239c024f6c88d206","createdAt":"2025-07-02T21:01:29.882Z","updatedAt":"2025-07-02T21:01:29.882Z","__v":0,"realEndLocation":{"_id":"68659e2b1663e447eea02f6d","lat":-72.6071614,"lon":-38.7651863,"loc":[-38.7651863,-72.6071614]},"endedAt":"2025-07-02T21:01:31.477Z"} 
 </msg>
<msg timestamp="20250702 17:01:29.613" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20250702 17:01:28.790" endtime="20250702 17:01:29.613"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250702 17:01:29.616" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20250702 17:01:29.614" endtime="20250702 17:01:29.617"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>200</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20250702 17:01:29.617" endtime="20250702 17:01:29.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250702 17:01:29.621" level="INFO">200</msg>
<status status="PASS" starttime="20250702 17:01:29.621" endtime="20250702 17:01:29.622"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250702 17:01:39.625" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20250702 17:01:29.623" endtime="20250702 17:01:39.625"/>
</kw>
<status status="PASS" starttime="20250702 17:01:28.773" endtime="20250702 17:01:39.626"/>
</test>
<status status="PASS" starttime="20250702 17:00:59.489" endtime="20250702 17:01:39.631"/>
</suite>
<statistics>
<total>
<stat pass="11" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="11" fail="0" skip="0" id="s1" name="extTestCases">extTestCases</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
